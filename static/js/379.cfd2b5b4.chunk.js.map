{"version":3,"file":"static/js/379.cfd2b5b4.chunk.js","mappings":"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","sources":["components/loginForm/loginForm.jsx","pages/loginPage/loginPage.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  OutlinedInput,\n  SvgIcon,\n  Typography,\n} from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom/dist';\nimport goose from './elements.png';\nimport Sprite from 'icons/sprite.svg';\n\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n});\n\nconst borderColor = {\n  validColor: '#3CBC81',\n  invalidColor: '#E74A3B',\n};\n\nconst LogInForm = () => {\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n\n        setSubmitting(false);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n        return (\n          <Box\n            sx={{\n              backgroundColor: '#DCEBF7',\n              height: '100%',\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'fixed',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <Container\n              sx={{\n                position: 'relative',\n                width: { xs: '335px', md: '480px' },\n                borderRadius: 2,\n                backgroundColor: '#fff',\n                pr: { xs: 3, md: 5 },\n                pl: { xs: 3, md: 5 },\n                pt: 5,\n                pb: 5,\n              }}\n            >\n              <Form autoComplete=\"off\">\n                <Typography\n                  variant=\"h2\"\n                  sx={{\n                    fontSize: 18,\n                    color: '#3E85F3',\n                    mb: 4,\n                    fontWeight: 600,\n                    lineHeight: '24px',\n                  }}\n                >\n                  Log In\n                </Typography>\n                <label style={{ position: 'relative' }}>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Email\n                  </Typography>\n                  <Field\n                    as={OutlinedInput}\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    placeholder=\"nadiia@gmail.com\"\n                    sx={{\n                      border: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      } solid 1px`,\n                      fontFamily: 'Inter, sans-serif',\n                      width: '100%',\n                      borderRadius: 2,\n                      fontSize: 16,\n                      lineHeight: '18px',\n                      fontWeight: 600,\n                    }}\n                  />\n                  {isValid('email') === 'is-valid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#done`}></use>\n                      </SvgIcon>\n                      <Typography sx={{ color: '#3CBC81', fontSize: 12 }}>\n                        This is a CORRECT email\n                      </Typography>\n                    </>\n                  )}\n                  {isValid('email') === 'is-invalid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#error-input`}></use>\n                      </SvgIcon>\n                    </>\n                  )}\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    style={{\n                      fontSize: 12,\n                      lineHeight: '14px',\n                      color: '#DA1414',\n                      marginTop: 8,\n                    }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      fontWeight: 600,\n                      mb: 1,\n                      mt: 3,\n                      color: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Password\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      placeholder=\"•••••••\"\n                      sx={{\n                        border: `${\n                          (isValid('password') === 'is-invalid' &&\n                            borderColor.invalidColor) ||\n                          (isValid('password') === 'is-valid' &&\n                            borderColor.validColor)\n                        } solid 1px`,\n                        width: '100%',\n                        fontFamily: 'Inter',\n                        borderRadius: 2,\n                        fontSize: 16,\n                        lineHeight: '18px',\n                      }}\n                    />\n                    {isValid('password') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n\n                        <Typography sx={{ color: '#3CBC81', fontSize: 12 }}>\n                          This is a CORRECT password\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('password') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    style={{\n                      fontSize: 12,\n                      lineHeight: '14px',\n                      color: '#DA1414',\n                      marginTop: 8,\n                    }}\n                  />\n                </label>\n                <Button\n                  sx={{\n                    textTransform: 'none',\n                    backgroundColor: '#2B78EF',\n                    marginTop: 4,\n                    width: '100%',\n                    padding: 2,\n                    borderRadius: 4,\n                    fontSize: 14,\n                    fontWeight: 600,\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                  variant=\"contained\"\n                  type=\"submit\"\n                  endIcon={\n                    <SvgIcon\n                      stroke=\"currentColor\"\n                      sx={{\n                        width: { xs: '20px', md: '24px' },\n                        height: { xs: '20px', md: '24px' },\n                      }}\n                    >\n                      <use href={`${Sprite}#log-in`}></use>\n                    </SvgIcon>\n                  }\n                >\n                  Log in\n                </Button>\n              </Form>\n            </Container>\n            <Link to={'/register'}>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  fontSize: 12,\n                  color: '#3E85F3',\n                  mt: 2.25,\n                  fontWeight: 600,\n                  textDecoration: 'underline',\n                }}\n              >\n                Sign up\n              </Typography>\n            </Link>\n            {window.innerWidth > 1440 ? (\n              <img\n                style={{ position: 'absolute', right: '60px', bottom: '19px' }}\n                src={goose}\n                alt=\"goose-racket\"\n              />\n            ) : (\n              <></>\n            )}\n          </Box>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default LogInForm;\n","\nimport LogInForm from \"components/loginForm/loginForm\"\n\nconst LoginPage = () => {\n    return (\n      \n            <LogInForm />\n\n        \n    )\n}\nexport default LoginPage"],"names":["ValidationSchema","Yup","shape","email","required","password","min","borderColor","initialValues","validationSchema","onSubmit","values","setSubmitting","console","log","errors","touched","handleChange","handleBlur","isValid","handleSubmit","isSubmitting","field","Box","sx","backgroundColor","height","width","display","alignItems","position","flexDirection","justifyContent","Container","xs","md","borderRadius","pr","pl","pt","pb","autoComplete","Typography","variant","fontSize","color","mb","fontWeight","lineHeight","style","as","OutlinedInput","type","name","onChange","onBlur","value","placeholder","border","fontFamily","SvgIcon","stroke","top","right","href","Sprite","component","marginTop","mt","Button","textTransform","padding","endIcon","Link","to","textDecoration","window","innerWidth","bottom","src","goose","alt"],"sourceRoot":""}