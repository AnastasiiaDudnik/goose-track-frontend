{"version":3,"file":"static/js/709.daaf7eff.chunk.js","mappings":"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","sources":["components/addTaskBtn/addTaskBtn.jsx","components/taskToolbar/taskToolbar.jsx","components/taskColumnCard/taskColumnCard.jsx","components/tasksColumnList/tasksColumnList.jsx","components/taskModal/modal/modal.jsx","components/taskForm/taskForm.jsx","components/taskModal/taskModal.jsx","components/tasksColumnList copy/tasksColumn.jsx","redux/tasks/selectors.js","components/columnsTasksList/columnsTasksList.jsx","components/dayCalendarHead/dayCalendarHead.jsx","components/choosedDay/choosedDay.jsx","components/variables/colors.jsx"],"sourcesContent":["import { Button, IconButton, SvgIcon } from '@mui/material';\nimport React from 'react';\nimport Sprite from '../../icons/sprite.svg';\n\nexport default function AddTaskBtn({ btnList = false, openModal }) {\n  if (btnList === true) {\n    return (\n      <Button onClick={openModal} sx={style.btnAdd}>\n        {' '}\n        + add task{' '}\n      </Button>\n    );\n  }\n  return (\n    <IconButton onClick={openModal} aria-label=\"delete\" sx={style.btn}>\n      <SvgIcon sx={style.iconAdd} stroke=\"#111111\">\n        <use href={`${Sprite}#plus-circle`}></use>\n      </SvgIcon>\n    </IconButton>\n  );\n}\n\nconst style = {\n  btn: {\n    color: 'white',\n  },\n  iconAdd: {\n    width: { xs: '22px', md: '24px' },\n    height: { xs: '22px', md: '24px' },\n  },\n  btnAdd: {\n    width: '100%',\n    height: '48px',\n    backgroundColor: '#E3F3FF',\n    borderRadius: '8px',\n    border: 'dashed #3E85F3 2px',\n  },\n};\n","import { Box, IconButton, List, ListItem, SvgIcon } from '@mui/material'\nimport React, {  useState } from 'react'\nimport Sprite from '../../icons/sprite.svg'\nimport { useDispatch } from 'react-redux'\nimport { deleteTask, updateTask } from 'redux/tasks/operations';\n\nfunction MiniModal({ todo }) {\n    const dispatch = useDispatch();\n\n    return (\n        <Box sx={style.miniModal} id={'modal'}>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'to-do' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'to-do' }))} >\n                To do\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'in-progress' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'in-progress' }))}>\n                In progress\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'done' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'done' }))}>\n                Done\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n        </Box>)\n}\n\nexport default function TaskToolbar({ todo }) {\n    const dispatch = useDispatch();\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <List sx={style.taskMenu} >\n\n            <ListItem sx={{ padding: '0', position: { xs: 'static', md: 'relative' } }}>\n                <IconButton aria-label=\"drag\" sx={style.btnMenu} onClick={() => setIsOpen(isOpen => !isOpen)}>\n                    <SvgIcon sx={{...style.iconButton, stroke: isOpen === true ? 'blue' : '#111111'}}   >\n                        <use href={`${Sprite}#arrow-circle`}></use>\n                    </SvgIcon>\n                </IconButton>\n                {isOpen && <MiniModal todo={todo}/>}\n\n            </ListItem>\n\n            <ListItem sx={{ padding: '0' }}>\n                <IconButton aria-label=\"edit\" sx={style.btnMenu}>\n                    <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                        <use href={`${Sprite}#pencil`}></use>\n                    </SvgIcon>\n                </IconButton>\n            </ListItem>\n\n            <ListItem sx={{ padding: '0' }}>\n                <IconButton aria-label=\"delete\" sx={style.btnMenu} onClick={() => dispatch(deleteTask(todo._id))}>\n                    <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                        <use href={`${Sprite}#trash`}></use>\n                    </SvgIcon>\n                </IconButton>\n            </ListItem>\n\n        </List>\n    )\n}\n\nconst style = {\n    taskMenu: {\n        maxWidth: 360,\n        display: 'flex',\n        padding: '0',\n        gap: '10px'\n    },\n    btnMenu: {\n        padding: '0',\n    },\n    iconButton: {\n        width: { xs: '14px', md: '16px' },\n        height: { xs: '14px', md: '16px' },\n        color: 'transparent'\n    },\n    miniModal: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '14px',\n        position: 'absolute',\n        right: { xs: '-15px' },\n        left: { md: '0px', },\n        bottom: '-10px',\n        padding: '20px 24px',\n        boxSizing: 'border-box',\n        width: '148px',\n        height: '90px',\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        transform: 'translateY(100%)',\n        zIndex: '1000',\n        boxShadow: '0px 4px 16px 0px rgba(17, 17, 17, 0.10)'\n\n    },\n    btnMiniModal: {\n        height: '18px',\n        color: '#343434',\n        fontSize: '14px',\n        fontFamily: 'Inter',\n        fontStyle: 'normal',\n        fontWeight: '500',\n        lineHeight: '18px',\n\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    }\n}","import { Avatar, Box, Typography } from '@mui/material'\nimport TaskToolbar from 'components/taskToolbar/taskToolbar'\nimport React from 'react'\n\n\nexport default function TaskColumnCard({todo}) {\n\n    return (\n        <Box sx={style.taskBox}>\n            <Typography sx={style.text}>{todo.title}</Typography>\n            <Box sx={style.flexBox}>\n                <Box sx={style.avatarBox}>\n                    <Avatar sx={style.avatar} />\n                    \n                    <Box sx={{...style.priorityLabel, backgroundColor: \n                        todo.priority === 'low' ? \"#72C2F8\" : todo.priority === 'medium' ? '#F3B249' : '#EA3D65'\n                    }}>{todo.priority}</Box>\n                </Box>\n                <TaskToolbar todo={todo}/>\n            </Box>\n        </Box>\n    )\n}\n\nconst style = {\n    flexBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-end',\n    },\n    text: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        width: '100%',\n        whiteSpace: 'nowrap',\n        marginBottom: '28px'\n    },\n    taskBox: {\n        padding: '15px',\n        boxSizing: 'border-box',\n        bgcolor: '#F7F6F9',\n        minWidth: '100%',\n        maxWidth: '100%',\n        borderRadius: '8px',\n        position: 'relative',\n    },\n    avatarBox: {\n        display: 'flex',\n        gap: '10px',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n    },\n    avatar: {\n        border: '1.8px solid #3E85F3',\n        width: { xs: '32px', md: '44px' },\n        height: { xs: '32px', md: '44px' },\n    },\n    priorityLabel: {\n        // bgcolor: '#F3B249',\n        paddingInline: '15px',\n        height: '20px',\n        borderRadius: '4px',\n        lineHeight: '1.2',\n        fontSize: '10px',\n        color: '#F7F6F9',\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n}","import { List, ListItem } from '@mui/material'\nimport TaskColumnCard from 'components/taskColumnCard/taskColumnCard'\nimport React from 'react'\n\nexport default function TasksColumnList({ todos }) {\n\n    return (\n        <List sx={style.list}>\n            {todos.map(todo =>\n                <ListItem key={todo._id} sx={style.item}>\n                    <TaskColumnCard todo={todo} />\n                </ListItem>\n            )}\n        </List>\n    )\n}\n\nconst style = {\n    list: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '18px',\n        marginTop: '24px', \n        height: '400px',\n        padding: '0',\n        paddingInline: '21px',\n    },\n    item: {\n        \"&:last-child\": {\n            marginBottom: {\n                xs: '46px',\n                md: '0'\n            }\n        },\n        padding: '0'\n    },\n}\n\n\n\n\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Box, IconButton, Modal, SvgIcon } from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalWrapper = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.code === `Escape`) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [closeModal]);\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Modal open onClose={handleClose} disablePortal>\n      <Box\n        sx={{\n          position: 'absolute',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          borderRadius: '8px',\n          maxWidth: '95%',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        <IconButton\n          onClick={closeModal}\n          sx={{\n            position: 'absolute',\n            top: '14px',\n            right: '14px',\n            transition: 'all 250ms',\n            cursor: 'pointner',\n            width: { xs: '20px', md: '24px' },\n            height: { xs: '20px', md: '24px' },\n            padding: 0,\n          }}\n        >\n          <SvgIcon stroke=\"currentColor\">\n            <use href={`${Sprite}#close`}></use>\n          </SvgIcon>\n        </IconButton>\n        {children}\n      </Box>\n    </Modal>,\n    modalRoot\n  );\n};\n\nexport default ModalWrapper;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  Typography,\n  Box,\n  InputBase,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Button,\n  SvgIcon,\n} from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport { colorsLight } from 'components/variables/colors';\nimport { Notify } from 'notiflix';\nimport { addTask } from 'redux/tasks/operations';\n// import { selectError } from 'redux/tasks/selectors';\n\nconst TaskForm = ({ closeModal }) => {\n  const defaultTask = {\n    title: '',\n    start: '00:00',\n    end: '00:00',\n    priority: 'low',\n    category: 'in-progress',\n  };\n\n  const [task, setTask] = useState(defaultTask);\n  // const [savedTask, setSavedTask] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setTask(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (task.start > task.end) {\n      Notify.failure('Start time must be later than end time');\n      return;\n    } else {\n      dispatch(addTask({ ...task, date: '2023-07-07' }));\n      closeModal();\n    }\n  };\n\n  return (\n    <Formik initialValues={defaultTask}>\n      <Form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            padding: { xs: '48px 18px 40px', md: '40px 28px', lg: '40px 28px' },\n          }}\n        >\n          <label>\n            <Typography\n              sx={{\n                color: colorsLight.secondaryTextColor,\n                fontSize: '12px',\n                fontWeight: '500',\n                lineHeight: '1.16',\n                textAlign: 'start',\n                marginBottom: '8px',\n              }}\n            >\n              Title\n            </Typography>\n            <Field\n              placeholder=\"Enter text\"\n              name=\"title\"\n              type=\"text\"\n              onChange={handleChange}\n              value={task.title}\n              as={InputBase}\n              sx={{\n                width: '100%',\n                fontSize: '14px',\n                fontWeight: 600,\n                color: colorsLight.popUpInputTextColor,\n                border: '1px solid rgba(17, 17, 17, 0.15)',\n                borderRadius: '8px',\n                padding: '8px 18px 7px 18px',\n                marginBottom: { xs: '16px', md: '18px', lg: '18px' },\n                backgroundColor: colorsLight.inputFieldColor,\n              }}\n            />\n          </label>\n          <Box\n            sx={{\n              display: 'flex',\n              gap: '14px',\n              marginBottom: { xs: '16px', md: '28px', lg: '28px' },\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  Start\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"start\"\n                  value={task.start}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  End\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"end\"\n                  value={task.end}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n          </Box>\n\n          <RadioGroup\n            onChange={handleChange}\n            value={task.priority}\n            name=\"priority\"\n            sx={{\n              flexDirection: 'row',\n              flexWrap: 'nowrap',\n              justifyContent: 'start',\n              gap: '16px',\n              marginBottom: '32px',\n              height: { xs: '14px', md: '18px', lg: '18px' },\n            }}\n          >\n            <FormControlLabel\n              label=\"Low\"\n              value={'low'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskLowColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskLowColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"Medium\"\n              value={'medium'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskMedColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                      padding: '0px',\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskMedColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"High\"\n              value={'high'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskHighColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskHighColor,\n                    },\n                  }}\n                />\n              }\n            />\n          </RadioGroup>\n\n          <Box\n            sx={{\n              height: { xs: '42px', md: '48px', lg: '48px' },\n              display: 'flex',\n              gap: '14px',\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: '100%',\n                flexGrow: '1',\n                backgroundColor: colorsLight.accentBackgroundColor,\n                boxShadow: 'none',\n                gap: '8px',\n              }}\n            >\n              <SvgIcon\n                stroke=\"currentColor\"\n                sx={{\n                  width: { xs: '18px', md: '20px', lg: '20px' },\n                  height: { xs: '18px', md: '20px', lg: '20px' },\n                  fill: '#3E85F3;',\n                }}\n              >\n                <use href={`${Sprite}#add`}></use>\n              </SvgIcon>\n              Add\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={closeModal}\n              sx={{\n                height: '100%',\n                width: '144px',\n                backgroundColor: colorsLight.taskCancelColor,\n                color: colorsLight.mainTextColor,\n                boxShadow: 'none',\n              }}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n","import { Box } from '@mui/material';\nimport ModalWrapper from 'components/taskModal/modal/modal';\nimport TaskForm from 'components/taskForm/taskForm';\nimport { colorsLight } from 'components/variables/colors';\n// import { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\nconst TaskModal = ({ closeModal, currentTask }) => {\n  // const [data, setData] = useState(null);\n  // const { currentDay } = useParams();\n\n  // useEffect(() => {\n  //   const { _id, category } = currentTask;\n\n  //   if (_id) {\n  //     setData({ ...data, status: 'edit' });\n  //   } else if (category) {\n  //     setData({\n  //       title: '',\n  //       date: currentDay,\n  //       start: '00:00',\n  //       end: '00:00',\n  //       priority: 'Low',\n  //       category,\n  //       statusOperation: 'create',\n  //     });\n  //   } else {\n  //     closeModal();\n  //   }\n  // }, [closeModal, currentTask, currentDay]);\n\n  return (\n    <ModalWrapper closeModal={closeModal}>\n      <Box\n        sx={{\n          borderRadius: '8px',\n          border: '1px solid rgba(220, 227, 229, 0.8)',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          backgroundColor: colorsLight.mainBackgroundColor,\n          width: { xs: '100%', md: '396px', lg: '396px' },\n          height: { xs: '100%', md: '360px', lg: '360px' },\n          padding: 0,\n        }}\n      >\n        <TaskForm currentTask={currentTask} closeModal={closeModal} />\n      </Box>\n    </ModalWrapper>\n  );\n};\n\nexport default TaskModal;\n","import { Box, Typography } from '@mui/material';\nimport AddTaskBtn from 'components/addTaskBtn/addTaskBtn';\nimport { useState } from 'react';\nimport TasksColumnList from 'components/tasksColumnList/tasksColumnList';\nimport React from 'react';\nimport TaskModal from 'components/taskModal/taskModal';\n\nexport default function TasksColumn({ title, todos }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <Box sx={style.listTodos}>\n      <Box sx={style.addPanel}>\n        <Typography>{title}</Typography>\n        <AddTaskBtn openModal={openModal} />\n      </Box>\n\n      <TasksColumnList todos={todos} />\n\n      <Box sx={style.btnAdd}>\n        <AddTaskBtn btnList openModal={openModal} />\n      </Box>\n      {showModal && <TaskModal currentTask={todos} closeModal={closeModal} />}\n    </Box>\n  );\n}\n\nconst style = {\n  btnAdd: {\n    width: {\n      xs: 'calc(100% - 36px)',\n      md: '100%',\n    },\n    position: {\n      xs: 'absolute',\n      md: 'static',\n    },\n    bottom: '10px',\n    left: '18px',\n    boxSizing: 'border-box',\n    paddingInline: {\n      md: '21px',\n    },\n    marginTop: {\n      md: '32px',\n    },\n  },\n  addPanel: {\n    paddingInline: '21px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  listTodos: {\n    boxSizing: 'border-box',\n    mt: '15px',\n    maxWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    minWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '8px',\n    scrollSnapAlign: 'center',\n    alignItems: 'space-between',\n    position: 'relative',\n    padding: '18px 0 22px 0',\n  },\n};\n","export const selectTasks = state => state.tasks.tasks;\n\nexport const selectCurrentTask = state => state.tasks.currentTask;\n\nexport const selectIsRefreshing = state => state.tasks.isRefreshing;\n\nexport const selectError = state => state.tasks.error;\n","import { Box } from '@mui/material'\nimport TasksColumn from 'components/tasksColumnList copy/tasksColumn'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTasks } from 'redux/tasks/selectors'\n\nexport default function ColumnsTasksList({value, weekend}) {\n  const {tasks} = useSelector(selectTasks);\n  const day = new Date(weekend[value].date).getDate();\n\n  if (!tasks) {\n    return\n  }\n  \n  const dayTasks = tasks.filter(({date}) => new Date(date).getDate() === day) \n  \n  return (\n    <Box sx={style.taskPanel}>\n      <TasksColumn title={'To do'} todos={dayTasks.filter(({category}) => category === \"to-do\")}/>\n      <TasksColumn title={'In progress'} todos={dayTasks.filter(({category}) => category === \"in-progress\")}/>\n      <TasksColumn title={'Done'} todos={dayTasks.filter(({category}) => category === \"done\")}/>\n    </Box>\n  )\n}\n\nconst style = {\n  \n  taskPanel: {\n    scrollbarColor: 'black',\n    display: 'flex  ',\n    overflowX: {\n      xs: 'scroll',\n      mb: 'scroll',\n      lg: 'auto',\n    },\n    scrollSnapType: 'x mandatory',\n    width: {\n      xs: 'calc(100vw - 40px)',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    gap: {\n      xs: '20px',\n      md: '16px',\n      lg: '27px'\n    },\n    boxSizing: 'border-box',\n\n    paddingBottom: '46px',\n  }\n}","import { Box, Tab, Tabs } from '@mui/material'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport weekday from 'dayjs/plugin/weekday'\ndayjs.extend(weekday)\n\nexport default function DayCalendarHead({ value, handleChange, weekend }) {\n    \n    return (\n        <>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n                sx={style.weekIconList}>\n                {\n                    weekend.map(({ day, weekDay, weekDayMob }) =>\n                        <Tab key={weekDay}\n                            sx={style.iconDayTask}\n                            icon={\n                                <Box sx={style.dayTitle}>\n                                    <Box sx={style.desk}>{weekDay}</Box>\n                                    <Box sx={style.mobile}>{weekDayMob}</Box>\n                                    <Box className='numberDay' >{day}</Box>\n                                </Box>}\n                        />\n                    )\n                }\n            </Tabs>\n        </>\n    )\n}\n\nconst style = {\n    iconDayTask: {\n\n        paddingInline: '0',\n        '&.Mui-selected': {\n            color: '#343434',\n            border: 'none'\n        },\n        '& .numberDay': {\n            width: '20px',\n            height: '20px',\n            marginTop: '6px',\n\n        },\n        '&.Mui-selected .numberDay': {\n            backgroundColor: '#3E85F3',\n            borderRadius: '6px',\n            color: '#FFFFFF',\n\n        },\n        '&': {\n            width: 'calc(100% / 7)'\n        },\n        '& span': {\n            display: 'none',\n            color: '#3E85F3'\n        },\n    },\n    dayTitle: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: 'Inter',\n    },\n    desk: {\n        display: {\n            xs: 'none',\n            md: 'block'\n        }\n    },\n    mobile: {\n        display: {\n            md: 'none'\n        }\n    },\n    weekIconList: {\n        '.MuiTabs-indicator': {\n            display: 'none'\n        },\n        '.MuiButtonBase-root': {\n            minWidth: {\n                xs: 'calc(100%/7)',\n                md: 'calc((100% - 64px) / 7)',\n            },\n            boxSizing: 'border-box',\n        },\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        boxSizing: 'border-box',\n        width: '100%'\n    }\n}","import { Box } from '@mui/material'\nimport ColumnsTasksList from 'components/columnsTasksList/columnsTasksList';\nimport DayCalendarHead from 'components/dayCalendarHead/dayCalendarHead';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getWeekTasks } from 'redux/tasks/operations';\n\nexport default function ChoosedDay() {\n    const params = useParams();\n    const [day] = useState(() => params.currentDay ? new Date(params.currentDay) : new Date())\n    const [value, setValue] = React.useState(null);\n    const dispatch = useDispatch();\n\n    const weekend = useMemo(() => {\n        const arr = [];\n        let i = 0; let y = 7;\n\n        if (dayjs(day).weekday() === 0) {\n            i = -7; y = 0;\n        }\n        let e = 0\n        for (i; i < y; i++) {\n            const test = dayjs(day).weekday(i + 1);\n\n            arr[e] = {\n                day: test.$D,\n                weekDay: String(test.$d).slice(0, 3),\n                weekDayMob: String(test.$d).slice(0, 1),\n                date: test.$d,\n            }\n            e++\n        }\n        return arr\n    }, [day])\n\n    function addZero(num) {\n        if (num < 10) {\n            return `0${num}`\n        }\n        return num\n    }\n    useEffect(() => {\n        if (value === null) {\n            setValue(dayjs(day).day() === 0 ? 6 : dayjs(day).day() - 1)\n        }\n    }, [day, value]);\n\n    useEffect(() => {\n        if (weekend[0] && day) {\n            dispatch(getWeekTasks({\n                years: new Date(weekend[0].date).getFullYear(),\n                month: addZero(new Date(weekend[0].date).getMonth() + 1),\n                day: addZero(new Date(weekend[0].date).getDate()),\n            }))\n        }\n    }, [day, dispatch, weekend])\n\n    const handleChange = (e, newValue) => {\n        setValue(newValue);\n    };\n    if (!day) {\n        return\n    }\n\n    if (value === null || !weekend) {\n        return\n    }\n    return (\n        <Box sx={style.boxDay}>\n            <Box sx={{ boxSizing: 'border-box' }}>\n                <Box sx={{ borderColor: 'divider', }}>\n                    <DayCalendarHead value={value} weekend={weekend} handleChange={handleChange} />\n                </Box>\n            </Box>\n            <ColumnsTasksList weekend={weekend} value={value} />\n        </Box>\n    )\n}\n\nconst style = {\n    boxDay: {\n        width: {\n            xs: '100%',\n            md: 'calc(100vw - 64px)',\n            lg: 'calc(100%)',\n        },\n        margin: '0'\n    }\n}\n\n","const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };"],"names":["AddTaskBtn","btnList","openModal","Button","onClick","sx","style","btnAdd","IconButton","btn","SvgIcon","iconAdd","stroke","href","Sprite","color","width","xs","md","height","backgroundColor","borderRadius","border","MiniModal","todo","dispatch","useDispatch","Box","miniModal","id","btnMiniModal","display","category","updateTask","iconButton","TaskToolbar","useState","isOpen","setIsOpen","List","taskMenu","ListItem","padding","position","btnMenu","deleteTask","_id","maxWidth","gap","flexDirection","right","left","bottom","boxSizing","bgcolor","transform","zIndex","boxShadow","fontSize","fontFamily","fontStyle","fontWeight","lineHeight","alignItems","justifyContent","TaskColumnCard","taskBox","Typography","text","title","flexBox","avatarBox","Avatar","avatar","priorityLabel","priority","textOverflow","overflow","whiteSpace","marginBottom","minWidth","paddingInline","TasksColumnList","todos","list","map","item","marginTop","modalRoot","document","querySelector","children","closeModal","useEffect","handleEscape","e","code","window","addEventListener","removeEventListener","createPortal","Modal","open","onClose","target","currentTarget","disablePortal","top","transition","cursor","defaultTask","start","end","task","setTask","handleChange","name","value","prev","handleSubmit","preventDefault","Notify","addTask","date","initialValues","onSubmit","lg","colorsLight","textAlign","placeholder","type","onChange","as","InputBase","flexGrow","RadioGroup","flexWrap","FormControlLabel","label","control","Radio","variant","fill","currentTask","TasksColumn","showModal","setShowModal","listTodos","addPanel","mt","scrollSnapAlign","selectTasks","state","tasks","ColumnsTasksList","weekend","useSelector","day","Date","getDate","dayTasks","filter","taskPanel","scrollbarColor","overflowX","mb","scrollSnapType","paddingBottom","DayCalendarHead","Tabs","weekIconList","weekDay","weekDayMob","Tab","iconDayTask","icon","dayTitle","desk","mobile","className","dayjs","weekday","ChoosedDay","params","useParams","currentDay","React","setValue","useMemo","arr","i","y","test","$D","String","$d","slice","addZero","num","getWeekTasks","years","getFullYear","month","getMonth","boxDay","borderColor","newValue","margin","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor"],"sourceRoot":""}