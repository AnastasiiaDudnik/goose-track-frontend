{"version":3,"file":"static/js/372.2d1d38be.chunk.js","mappings":"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","sources":["components/variables/colors.jsx","components/calendar/calendar.js","components/periodPaginator/periodPaginator.jsx","components/periodTypeSelect/periodTypeSelect.jsx","components/calendarToolbar/calendarToolbar.jsx","pages/calendarPage/calendarPage.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };","import React from 'react';\nimport { Box, Container, Typography } from '@mui/material';\nimport dayjs from 'dayjs';\n\nconst Calendar = () => {\n  const currentDate = dayjs();\n  const daysInMonth = currentDate.daysInMonth();\n  console.log(daysInMonth);\n  const monthStart = currentDate.startOf('month').day();\n  const firstDayOfWeek = 1; // Set the first day of the week as 1 (Monday)\n\n  const renderCalendar = () => {\n    const calendar = [];\n    const offset = (monthStart - firstDayOfWeek + 7) % 7;\n\n    for (let i = 0; i < offset; i++) {\n      calendar.push(<Box key={`empty-${i}`} sx={cellStyle} />);\n    }\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      calendar.push(\n        <Box key={`day-${i}`} sx={cellStyle}>\n          <Typography sx={cellTextStyle}>{i}</Typography>\n        </Box>\n      );\n    }\n\n    return calendar;\n  };\n\n  const cellStyle = {\n    border: '1px solid #DCE3E5CC',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    paddingTop: '18px',\n    paddingRight: '22px',\n    bgcolor: '#FFF',\n  };\n\n  const cellTextStyle = {\n    color: '#343434',\n    fontSize: '16px',\n    fontFamily: 'Inter, sans-serif',\n    fontStyle: 'normal',\n    fontWeight: 700,\n    lineHeight: '18px',\n    textTransform: 'uppercase',\n  };\n\n  return (\n    <Container\n      sx={{ height: '90vh', display: 'flex', flexDirection: 'column' }}\n    >\n      <Box sx={{ flex: 1 }}>\n        <Box\n          display={'flex'}\n          maxWidth={'100%'}\n          p={'14px 60px'}\n          justifyContent={'space-between'}\n          bgcolor={'#FFF'}\n          borderRadius={'8px'}\n          border={'1px solid rgba(220, 227, 229, 0.80)'}\n          mb={'15px'}\n        >\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Mon\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Tue\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Wed\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Thu\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Fri\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Sat\n          </Typography>\n          <Typography align=\"center\" sx={cellTextStyle}>\n            Sun\n          </Typography>\n        </Box>\n\n        <Box\n          display=\"grid\"\n          gap={0}\n          gridTemplateColumns=\"repeat(7, 1fr)\"\n          sx={{ height: 'calc(100% - 78px)', overflowY: 'auto' }}\n        >\n          {renderCalendar()}\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Calendar;\n","import { Button, SvgIcon, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport { DateCalendar } from '@mui/x-date-pickers';\nimport { colorsLight } from 'components/variables/colors';\nimport Sprite from 'icons/sprite.svg';\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\nconst day = new Date();\nexport const PeriodPaginator = ({ mode, type }) => {\n  const [calendar, setCalendar] = useState(false);\n  const calendarRef = useRef(null);\n  const [date, setDate] = useState('');\n\n  useEffect(() => {\n    const today = moment(day, 'YYYY-MM-DD');\n    const currentDate = today.format('DD MMMM YYYY');\n    setDate(currentDate);\n    const handleClickOutside = event => {\n      if (calendarRef.current && !calendarRef.current.contains(event.target)) {\n        setCalendar(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const handleDatePicker = date => {\n    const today = moment(date.$d, 'YYYY-MM-DD');\n    const currentDate = today.format('DD MMMM YYYY');\n\n    setDate(currentDate);\n    setCalendar(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }} ref={calendarRef}>\n      <Box\n        sx={{\n          width: '131px',\n          backgroundColor: colorsLight.accentColor,\n          textAlign: 'center',\n          color: '#fff',\n          mt: 'auto',\n          mb: 'auto',\n          pt: '8px',\n          pb: '8px',\n          borderRadius: '8px',\n        }}\n      >\n        <Typography\n          sx={{\n            color: '#fff',\n            fontSize: '16px',\n            fontWeight: 700,\n            lineHeight: '18px',\n            textTransform: 'uppercase',\n            textAlign: 'center',\n            position: 'reletive',\n            cursor: 'pointer',\n          }}\n          onClick={() => setCalendar(!calendar)}\n        >\n          {type === 'month' ? date.slice(3, date.length) : date}\n        </Typography>\n      </Box>\n      <DateCalendar\n        sx={{\n          display: calendar ? 'block' : 'none',\n          position: 'absolute',\n          zIndex: 100,\n          backgroundColor: colorsLight.accentColor,\n          top: '165px',\n          borderRadius: '8px',\n          color: '#fff',\n          '& *': { color: '#fff' },\n          '& * .css-x2lq26-MuiButtonBase-root-MuiPickersDay-root:hover': {\n            backgroundColor: '#00a3ff',\n          },\n        }}\n        onChange={handleDatePicker}\n      />\n      <Box\n        sx={{\n          borderRadius: '8px',\n          border:\n            mode === 'dark'\n              ? '1px solid rgba(220,227,229, 0.80)'\n              : '1px solid #FFFFFF26',\n          ml: '8px',\n        }}\n      >\n        <Button\n          sx={{\n            minWidth: '38px',\n            backgroundColor: mode === 'dark' ? '#fff' : '#21222C',\n            textAlign: 'center',\n            borderTopLeftRadius: '8px',\n            borderBottomLeftRadius: '8px',\n            borderBottomRightRadius: '0px',\n            borderTopRightRadius: '0px',\n            padding: '4px 0px',\n          }}\n        >\n          <SvgIcon style={{ stroke: mode === 'dark' ? '#000' : '#fff' }}>\n            <use href={`${Sprite}#chevron-left`} />\n          </SvgIcon>\n        </Button>\n        <Button\n          sx={{\n            minWidth: '38px',\n            backgroundColor: mode === 'dark' ? '#fff' : '#21222C',\n            textAlign: 'center',\n            borderTopLeftRadius: '0px',\n            borderBottomLeftRadius: '0px',\n            borderBottomRightRadius: '8px',\n            borderTopRightRadius: '8px',\n            borderLeft:\n              mode === 'dark'\n                ? '1px solid rgba(220,227,229, 0.80)'\n                : '1px solid #FFFFFF26',\n            padding: '4px 0px',\n          }}\n        >\n          <SvgIcon style={{ stroke: mode === 'dark' ? '#000' : '#fff' }}>\n            <use href={`${Sprite}#chevron-right`} />\n          </SvgIcon>\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nexport const PeriodTypeSelect = ({ mode }) => {\n  return (\n    <List\n      component=\"nav\"\n      sx={{\n        p: 0,\n        m: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n        width: '164px',\n      }}\n    >\n      <ListItem sx={{ p: 0 }}>\n        <ListItemButton\n          LinkComponent={NavLink}\n          to=\"/main/calendar/month\"\n          sx={{\n            backgroundColor: mode !== 'dark' ? '#21222C' : '#E3F3FF',\n            color: '#3E85F3',\n            py: { xs: '8px' },\n            px: { xs: '16px' },\n            borderRadius: '8px 0px 0px 8px',\n            borderRight: `1px solid ${\n              mode !== 'dark'\n                ? 'rgba(255, 255, 255, 0.15)'\n                : 'rgba(62, 133, 243, 0.20)'\n            } `,\n            '&.active, &:hover, &:focus': {\n              backgroundColor: mode !== 'dark' ? '#3E85F3' : '#CAE8FF',\n              color: mode !== 'dark' ? '#FFFFFF' : '#3E85F3',\n            },\n          }}\n        >\n          <ListItemText\n            sx={{ m: 0 }}\n            primary={\n              <Typography\n                sx={{\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 500,\n                  fontSize: { xs: '14px', md: '16px' },\n                  lineHeight: { xs: 1.286, md: 1.125 },\n                }}\n              >\n                Month\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </ListItem>\n      <ListItem sx={{ p: 0 }}>\n        <ListItemButton\n          LinkComponent={NavLink}\n          to=\"/main/calendar/day/2023-11-1\"\n          sx={{\n            backgroundColor: mode !== 'dark' ? '#21222C' : '#E3F3FF',\n            color: '#3E85F3',\n            py: { xs: '8px' },\n            px: { xs: '25px', md: '26px' },\n            borderRadius: '0px 8px 8px 0px',\n            '&.active, &:hover, &:focus': {\n              backgroundColor: mode !== 'dark' ? '#3E85F3' : '#CAE8FF',\n              color: mode !== 'dark' ? '#FFFFFF' : '#3E85F3',\n            },\n          }}\n        >\n          <ListItemText\n            sx={{ m: 0 }}\n            primary={\n              <Typography\n                sx={{\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 500,\n                  fontSize: { xs: '14px', md: '16px' },\n                  lineHeight: { xs: 1.286, md: 1.125 },\n                }}\n              >\n                Day\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </ListItem>\n    </List>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { PeriodPaginator } from 'components/periodPaginator/periodPaginator';\nimport { PeriodTypeSelect } from 'components/periodTypeSelect/periodTypeSelect';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const CalendarToolbar = ({ mode }) => {\n  const [type, setType] = useState('month');\n  const location = useLocation();\n  const pathname = location.pathname.slice(0, -11);\n  useEffect(() => {\n    if (pathname.endsWith('main/c')) {\n      setType('day');\n      return;\n    }\n    setType('month');\n  }, [pathname]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: { xs: '24px', lg: '32px' },\n      }}\n    >\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <PeriodPaginator mode={mode} type={type} />\n      </LocalizationProvider>\n      <PeriodTypeSelect mode={mode} />\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport Calendar from 'components/calendar/calendar';\nimport { CalendarToolbar } from 'components/calendarToolbar/calendarToolbar';\n\nconst CalendarPage = ({ mode }) => {\n  return (\n    <Box>\n      <CalendarToolbar mode={mode} />\n      <Calendar />\n    </Box>\n  );\n};\n\nexport default CalendarPage;\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","import PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["colorsLight","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor","currentDate","dayjs","daysInMonth","console","log","monthStart","startOf","day","cellStyle","border","display","alignItems","justifyContent","paddingTop","paddingRight","bgcolor","cellTextStyle","color","fontSize","fontFamily","fontStyle","fontWeight","lineHeight","textTransform","Container","sx","height","flexDirection","Box","flex","maxWidth","p","borderRadius","mb","Typography","align","gap","gridTemplateColumns","overflowY","calendar","offset","i","push","renderCalendar","Date","PeriodPaginator","mode","type","useState","setCalendar","calendarRef","useRef","date","setDate","useEffect","moment","format","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","width","backgroundColor","textAlign","mt","pt","pb","position","cursor","onClick","slice","length","DateCalendar","zIndex","top","onChange","$d","ml","Button","minWidth","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","padding","SvgIcon","style","stroke","href","Sprite","borderLeft","PeriodTypeSelect","List","component","m","ListItem","ListItemButton","LinkComponent","NavLink","to","py","xs","px","borderRight","ListItemText","primary","md","CalendarToolbar","setType","pathname","useLocation","endsWith","marginBottom","lg","LocalizationProvider","dateAdapter","AdapterDayjs","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","createStyledComponent","useThemeProps","ContainerRoot","theme","_extends","marginLeft","boxSizing","marginRight","paddingLeft","spacing","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","React","className","other","_objectWithoutPropertiesLoose","_jsx","as","clsx","createContainer","styled"],"sourceRoot":""}