{"version":3,"file":"static/js/995.3fbac6a1.chunk.js","mappings":"4XAmBMA,EACQ,mCADRA,EAEU,UAGVC,EAAc,SAAAC,GAClB,OACE,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,GACVC,WAAY,OACZC,MAAO,UACPC,UAAW,OALf,SAQGN,GAGN,EAKKO,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,SAAUF,EAAAA,KACPG,IAAI,EAAG,mBACPC,IAAI,GAAI,kBACRC,SAAS,oBAOZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,qBACpDE,MAAOP,EAAAA,KACJG,IAAI,GAAI,mBACRC,IAAI,GAAI,kBACRI,cACHC,MAAOT,EAAAA,KACJI,IAAI,GAAI,wBACRM,QArBqB,gCAqBM,CAC1BC,QAAS,uBAEVH,gBAyXL,EAvXiB,WACf,IAAMI,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9B,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAgB,CACpBpB,SAAUU,EAAUW,KACpBC,UAAWZ,EAAUY,UACrBlB,MAAOM,EAAUN,OAAS,GAC1BmB,SAAUb,EAAUa,SACpBlB,MAAOK,EAAUL,OAAS,GAC1BE,MAAOG,EAAUH,OAAS,IAEtBiB,GAASC,EAAAA,EAAAA,IAAU,CACvBL,cAAAA,EACAvB,iBAAkBA,EAClB6B,SAAU,SAAAC,GACRT,GAASU,EAAAA,EAAAA,IAAWD,GACrB,IAGGE,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACdR,EAAOS,cAAcZ,EAAMW,GAC3Bf,GAAiB,EAClB,EAoCKiB,EAAU,SAAAC,GAAK,OACnBX,EAAOY,QAAQD,IAAUX,EAAOa,OAAOF,GACnC,aACAX,EAAOY,QAAQD,GACf,WACA,EALe,EAOrB,OACE,iBAAMT,SAAUF,EAAOc,aAAvB,UACE,UAACC,EAAA,EAAD,CACE/C,GAAI,CACFgD,MAAO,CAAEC,GAAI,QAASC,GAAI,QAASC,GAAI,UACvCC,aAAc,OACdC,QAAS,CAAEJ,GAAI,oBAAqBC,GAAI,qBACxCI,WAAY,OACZC,YAAa,OACbC,SAAU,WACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,gBAAiB,QAXrB,WAcE,UAACb,EAAA,EAAD,YACE,SAACc,EAAA,EAAD,CACEC,IAAI,SACJC,IAAKzC,EAAa0C,KAAO1C,EAAa0C,KAAO9C,EAAUY,UACvD9B,GAAI,CACFgD,MAAO,CAAEC,GAAI,OAAQC,GAAI,SACzBe,OAAQ,CAAEhB,GAAI,OAAQC,GAAI,SAC1BU,gBAAiB,UACjBM,OAAQ,oBACRC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJb,SAAU,CAAEP,GAAI,WAAYC,GAAI,YAChCoB,IAAK,CAAErB,GAAI,QAASC,GAAI,GACxBqB,KAAM,CAAEtB,GAAI,QAASC,GAAI,IAb7B,UAgBE,SAACsB,EAAA,EAAD,CACEC,OAAO,eACPzE,GAAI,CAAEgD,MAAO,OAAQiB,OAAQ,QAF/B,UAIE,gBAAKS,KAAI,UAAKC,EAAAA,EAAL,sBAGb,UAAC5B,EAAA,EAAD,CACE/C,GAAI,CACFwD,SAAU,WACVc,IAAK,CAAErB,GAAI,KAAMC,GAAI,QAASC,GAAI,SAClCyB,MAAO,CAAE3B,GAAI,MAAOC,GAAI,MAAOC,GAAI,OACnC0B,OAAQ,WALZ,WAQE,kBACEC,GAAG,YACHC,KAAK,OACLlD,KAAK,YACLmD,SArFe,SAAA1C,GACzB,IAAM2C,EAAO3C,EAAM4C,cAAcC,MAAM,GACjCrD,EAAYsD,IAAIC,gBAAgBJ,GACtC1D,EAAgB,CACdyC,KAAMlC,EACNmD,KAAMA,IAERjD,EAAOS,cAAc,YAAawC,GAClCxD,GAAiB,EAClB,EA6EW6D,OAAQtD,EAAOuD,WACfC,MAAO,CAAE/B,QAAS,WAEpB,kBAAOgC,QAAQ,YAAf,UACE,SAACjB,EAAA,EAAD,CAASC,OAAO,eAAhB,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,2BAKjB,SAAC5E,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,UACPF,SAAU,OACVyF,WAAY,IACZxF,WAAY,OACZyF,UAAW,UANf,SASGzE,EAAUW,QAEb,UAACkB,EAAA,EAAD,CACE/C,GAAI,CACFyD,QAAS,OACTmC,IAAK,CAAE3C,GAAI,OAAQC,GAAI,OAAQC,GAAI,QACnCO,cAAe,CAAET,GAAI,SAAUE,GAAI,OACnCH,MAAO,CAAEC,GAAI,QAASC,GAAI,QAASC,GAAI,SACvC0C,eAAgB,CAAE1C,GAAI,UACtB2C,GAAI,CAAE7C,GAAI,OAAQE,GAAI,SAP1B,WAUE,UAACJ,EAAA,EAAD,CACE/C,GAAI,CACFyD,QAAS,OACTC,cAAe,SACfkC,IAAK,CAAE3C,GAAI,OAAQC,GAAI,SAJ3B,WAOE,8BACE,SAACnD,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,OACPF,SAAU,OACVC,WAAY,OACZmE,GAAI,OALR,wBAUA,SAAC0B,EAAA,GAAD,CACEf,SAAU3C,EACViD,OAAQtD,EAAOuD,WACf/C,MAAOR,EAAOG,OAAO3B,SACrBwF,YAAY,YACZnE,KAAK,WACLkD,KAAK,OACL/E,GAAI,CACFgD,MAAO,CAAEC,GAAI,OAAQE,GAAI,SACzBlD,SAAU,OACVyF,WAAY,IACZvF,MAAO,OACPiD,aAAc,MACdC,QAAS,WACTa,OAAO,GAAD,OACqB,eAAxBxB,EAAQ,aACP9C,GACuB,aAAxB8C,EAAQ,aACP9C,EAJE,iBAQToC,EAAOa,OAAOrC,UACbwB,EAAOY,QAAQpC,UACfX,EAAYmC,EAAOa,OAAOrC,cAE9B,8BACE,SAACT,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,OACPF,SAAU,OACVC,WAAY,OACZmE,GAAI,OALR,uBAUA,SAAC4B,EAAA,EAAD,CACEjB,SArLW,SAAAkB,GAClBA,GAAMlE,EAAOS,cAAc,WAAY,IAC5C,IAAM0D,EAAgBC,IAAOF,EAAKG,IAAIC,OAAO,cAC7CtE,EAAOS,cAAc,WAAY0D,GACjC1E,GAAiB,EAClB,EAiLa8E,aAAcC,IAAMtF,EAAUa,SAAS0E,MAAM,EAAG,KAChD5E,KAAK,WACLkD,KAAK,OACLiB,YAAY,aACZhG,GAAI,CACFgD,MAAO,OACP/C,SAAU,OACVyF,WAAY,IACZvF,MAAO,OACP+D,OAAO,GAAD,OACqB,eAAxBxB,EAAQ,aACP9C,GACuB,aAAxB8C,EAAQ,aACP9C,EAJE,cAMNwD,aAAc,SAGjBpB,EAAOa,OAAOd,UACbC,EAAOY,QAAQb,UACflC,EAAYmC,EAAOa,OAAOd,cAE9B,8BACE,SAAChC,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,OACPF,SAAU,OACVC,WAAY,OACZmE,GAAI,OALR,oBAUA,SAAC0B,EAAA,GAAD,CACEf,SAAU3C,EACViD,OAAQtD,EAAOuD,WACf/C,MAAOR,EAAOG,OAAOvB,MACrBmE,KAAK,QACLlD,KAAK,QACLmE,YAAY,QACZhG,GAAI,CACFgD,MAAO,OACP/C,SAAU,OACVyF,WAAY,IACZvF,MAAO,OACP+D,OAAO,GAAD,OACkB,eAArBxB,EAAQ,UACP9C,GACoB,aAArB8C,EAAQ,UAA2B9C,EAHhC,cAKNwD,aAAc,MACdC,QAAS,cAGZrB,EAAOa,OAAOjC,OACboB,EAAOY,QAAQhC,OACff,EAAYmC,EAAOa,OAAOjC,cAGhC,UAACmC,EAAA,EAAD,CACE/C,GAAI,CACFyD,QAAS,OACTC,cAAe,SAEfkC,IAAK,CAAE3C,GAAI,OAAQC,GAAI,SAL3B,WAQE,8BACE,SAACnD,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,OACPF,SAAU,OACVC,WAAY,OACZmE,GAAI,OALR,oBAUA,SAAC0B,EAAA,GAAD,CACEf,SAAU,SAAA0B,GAAC,OAlPO,SAACA,EAAGjE,GAClC,IAAID,EAAQkE,EAAEnE,OAAOC,OACrBA,EAAQA,EAAMmE,QAAQ,MAAO,KAEnBC,OAAS,GAAKpE,EAAMoE,QAAU,EACtCpE,EAAQA,EAAMiE,MAAM,EAAG,GAAK,IAAMjE,EAAMiE,MAAM,GACrCjE,EAAMoE,OAAS,IACxBpE,EACEA,EAAMiE,MAAM,EAAG,GAAK,IAAMjE,EAAMiE,MAAM,EAAG,GAAK,IAAMjE,EAAMiE,MAAM,IAEpEhF,GAAiB,GAEjBgB,EAAc,QAASD,EACxB,CAqO4BqE,CAAwBH,EAAG1E,EAAOS,cAAtC,EACX6C,OAAQtD,EAAOuD,WACf/C,MAAOR,EAAOG,OAAOtB,MACrBkE,KAAK,QACLlD,KAAK,QACLmE,YAAY,yBACZhG,GAAI,CACFgD,MAAO,OACP/C,SAAU,OACVyF,WAAY,IACZvF,MAAO,OACP+D,OAAO,GAAD,OACkB,eAArBxB,EAAQ,UACP9C,GACoB,aAArB8C,EAAQ,UAA2B9C,EAHhC,cAKNwD,aAAc,MACdC,QAAS,cAGZrB,EAAOa,OAAOhC,OACbmB,EAAOY,QAAQ/B,OACfhB,EAAYmC,EAAOa,OAAOhC,WAE9B,8BACE,SAACd,EAAA,EAAD,CACEC,GAAI,CACFG,MAAO,OACPF,SAAU,OACVC,WAAY,OACZmE,GAAI,OALR,oBAUA,SAAC0B,EAAA,GAAD,CACEf,SAAU3C,EACViD,OAAQtD,EAAOuD,WACf/C,MAAOR,EAAOG,OAAOpB,MACrBgE,KAAK,OACLlD,KAAK,QACLmE,YAAY,kBACZhG,GAAI,CACFgD,MAAO,OACP/C,SAAU,OACVyF,WAAY,IACZvF,MAAO,OACP+D,OAAO,GAAD,OACkB,eAArBxB,EAAQ,UACP9C,GACoB,aAArB8C,EAAQ,UAA2B9C,EAHhC,cAKNwD,aAAc,MACdC,QAAS,cAGZrB,EAAOa,OAAO9B,OACbiB,EAAOY,QAAQ7B,OACflB,EAAYmC,EAAOa,OAAO9B,iBAIlC,SAACgC,EAAA,EAAD,CAAK/C,GAAI,CAAEyD,QAAS,OAAQoC,eAAgB,UAA5C,UACE,SAACiB,EAAA,EAAD,CACE9G,GAAI,CACF+G,cAAe,OACfnD,gBAAiB,UACjBxD,UAAW,CAAE6C,GAAI,OAAQE,GAAI,QAC7BH,MAAO,QACPK,QAAS,EACTD,aAAc,EACdnD,SAAU,GACVyF,WAAY,IACZsB,WAAY,qBAEdC,QAAQ,YACRlC,KAAK,SACLmC,UAAW1F,EAdb,gCAsBT,E,oBC3aD,EAPgB,WACd,OAAQ,UAAC2F,EAAA,EAAD,CAAsBC,YAAaC,EAAAA,EAAnC,WACN,SAAC,EAAD,IADM,MAIT,C","sources":["components/userForm/userForm.jsx","pages/accountPage/accountPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from 'redux/auth/operations';\nimport { useFormik } from 'formik';\nimport {\n  Typography,\n  SvgIcon,\n  Box,\n  Avatar,\n  Button,\n  InputBase,\n} from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport * as Yup from 'yup';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport moment from 'moment/moment';\nimport dayjs from 'dayjs';\n\nconst borderColor = {\n  validColor: '1px solid rgba(17, 17, 17, 0.15)',\n  invalidColor: '#E74A3B',\n};\n\nconst errorMesage = errorName => {\n  return (\n    <Typography\n      sx={{\n        fontSize: 12,\n        lineHeight: '14px',\n        color: '#DA1414',\n        marginTop: '8px',\n      }}\n    >\n      {errorName}\n    </Typography>\n  );\n};\n\nconst skypeNumberRegexp = /^\\+[1-9]\\d{0,2}[.-]?\\d{1,14}$/;\n// const birthdayRegexp = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Too Short name!')\n    .max(35, 'Too Long name!')\n    .required('Name is required'),\n  // birthday: Yup.string()\n  //   .notRequired()\n  //   .matches(birthdayRegexp, {\n  //     message: 'Invalid birthday',\n  //   })\n  //   .notRequired(),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  phone: Yup.string()\n    .min(14, 'Too Short name!')\n    .max(14, 'Too Long name!')\n    .notRequired(),\n  skype: Yup.string()\n    .max(16, 'Too Long name skype!')\n    .matches(skypeNumberRegexp, {\n      message: 'Invalid skype name',\n    })\n    .notRequired(),\n});\nconst UserForm = () => {\n  const userState = useSelector(selectUser);\n  const [selectAvatar, setSelectAvatar] = useState({});\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  const dispatch = useDispatch();\n  const initialValues = {\n    username: userState.name,\n    avatarURL: userState.avatarURL,\n    email: userState.email || '',\n    birthday: userState.birthday,\n    phone: userState.phone || '',\n    skype: userState.skype || '',\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(updateUser(values));\n    },\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    formik.setFieldValue(name, value);\n    setIsFormChanged(true);\n  };\n\n  const handleDatePicker = date => {\n    if (!date) formik.setFieldValue('birthday', '');\n    const formattedDate = moment(date.$d).format('DD/MM/YYYY');\n    formik.setFieldValue('birthday', formattedDate);\n    setIsFormChanged(true);\n  };\n\n\n  const handleAvatarUpload = event => {\n    const file = event.currentTarget.files[0];\n    const avatarURL = URL.createObjectURL(file);\n    setSelectAvatar({\n      path: avatarURL,\n      file: file,\n    });\n    formik.setFieldValue('avatarURL', file);\n    setIsFormChanged(true);\n  };\n\n  const handlePhoneNumberChange = (e, setFieldValue) => {\n    let value = e.target.value;\n    value = value.replace(/\\D/g, '');\n\n    if (value.length > 3 && value.length <= 6) {\n      value = value.slice(0, 3) + ' ' + value.slice(3);\n    } else if (value.length > 6) {\n      value =\n        value.slice(0, 3) + '(' + value.slice(3, 6) + ')' + value.slice(6);\n    }\n    setIsFormChanged(true);\n\n    setFieldValue('phone', value);\n  };\n\n  const isValid = field =>\n    formik.touched[field] && formik.errors[field]\n      ? 'is-invalid'\n      : formik.touched[field]\n      ? 'is-valid'\n      : '';\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Box\n        sx={{\n          width: { xs: '335px', md: '704px', lg: '1087px' },\n          borderRadius: '16px',\n          padding: { xs: '59px 0px 40px 0px', md: '40px 0px 40px 0px' },\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          position: 'relative',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: '#fff',\n        }}\n      >\n        <Box>\n          <Avatar\n            alt=\"avatar\"\n            src={selectAvatar.path ? selectAvatar.path : userState.avatarURL}\n            sx={{\n              width: { xs: '72px', md: '124px' },\n              height: { xs: '72px', md: '124px' },\n              backgroundColor: '#F8F8F8',\n              border: '2px solid #3E85F3',\n              mr: 'auto',\n              ml: 'auto',\n              mb: '18px',\n              position: { xs: 'absolute', md: 'relative' },\n              top: { xs: '-36px', md: 0 },\n              left: { xs: '132px', md: 0 },\n            }}\n          >\n            <SvgIcon\n              stroke=\"currentColor\"\n              sx={{ width: '48px', height: '48px' }}\n            >\n              <use href={`${Sprite}#userAvatar`} />\n            </SvgIcon>\n          </Avatar>\n          <Box\n            sx={{\n              position: 'absolute',\n              top: { xs: '4%', md: '150px', lg: '150px' },\n              right: { xs: '40%', md: '44%', lg: '46%' },\n              cursor: 'pointer',\n            }}\n          >\n            <input\n              id=\"avatarURL\"\n              type=\"file\"\n              name=\"avatarURL\"\n              onChange={handleAvatarUpload}\n              onBlur={formik.handleBlur}\n              style={{ display: 'none' }}\n            />\n            <label htmlFor=\"avatarURL\">\n              <SvgIcon stroke=\"currentColor\">\n                <use href={`${Sprite}#addAvatar`} />\n              </SvgIcon>\n            </label>\n          </Box>\n        </Box>\n        <Typography\n          sx={{\n            color: '#343434',\n            fontSize: '14px',\n            fontWeight: 700,\n            lineHeight: '18px',\n            textAlign: 'center',\n          }}\n        >\n          {userState.name}\n        </Typography>\n        <Box\n          sx={{\n            display: 'flex',\n            gap: { xs: '18px', md: '26px', lg: '50px' },\n            flexDirection: { xs: 'column', lg: 'row' },\n            width: { xs: '299px', md: '354px', lg: '758px' },\n            justifyContent: { lg: 'center' },\n            mt: { xs: '40px', lg: '44px' },\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              gap: { xs: '18px', md: '24px' },\n            }}\n          >\n            <label>\n              <Typography\n                sx={{\n                  color: '#111',\n                  fontSize: '12px',\n                  lineHeight: '14px',\n                  mb: '8px',\n                }}\n              >\n                User Name\n              </Typography>\n              <InputBase\n                onChange={handleInputChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.username}\n                placeholder=\"User Name\"\n                name=\"username\"\n                type=\"text\"\n                sx={{\n                  width: { xs: '100%', lg: '354px' },\n                  fontSize: '14px',\n                  fontWeight: 600,\n                  color: '#111',\n                  borderRadius: '8px',\n                  padding: '8px 18px',\n                  border: `${\n                    (isValid('username') === 'is-invalid' &&\n                      borderColor.invalidColor) ||\n                    (isValid('username') === 'is-valid' &&\n                      borderColor.validColor)\n                  } solid 1px`,\n                }}\n              />\n              {formik.errors.username &&\n                formik.touched.username &&\n                errorMesage(formik.errors.username)}\n            </label>\n            <label>\n              <Typography\n                sx={{\n                  color: '#111',\n                  fontSize: '12px',\n                  lineHeight: '14px',\n                  mb: '8px',\n                }}\n              >\n                Birthday\n              </Typography>\n              <DatePicker\n                onChange={handleDatePicker}\n                defaultValue={dayjs(userState.birthday.slice(0, 10))} \n                name=\"birthday\"\n                type=\"text\"\n                placeholder=\"DD/MM/YYYY\"\n                sx={{\n                  width: '100%',\n                  fontSize: '14px',\n                  fontWeight: 600,\n                  color: '#111',\n                  border: `${\n                    (isValid('birthday') === 'is-invalid' &&\n                      borderColor.invalidColor) ||\n                    (isValid('birthday') === 'is-valid' &&\n                      borderColor.validColor)\n                  } solid 1px`,\n                  borderRadius: '8px',\n                }}\n              />\n              {formik.errors.birthday &&\n                formik.touched.birthday &&\n                errorMesage(formik.errors.birthday)}\n            </label>\n            <label>\n              <Typography\n                sx={{\n                  color: '#111',\n                  fontSize: '12px',\n                  lineHeight: '14px',\n                  mb: '8px',\n                }}\n              >\n                Email\n              </Typography>\n              <InputBase\n                onChange={handleInputChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.email}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                sx={{\n                  width: '100%',\n                  fontSize: '14px',\n                  fontWeight: 600,\n                  color: '#111',\n                  border: `${\n                    (isValid('email') === 'is-invalid' &&\n                      borderColor.invalidColor) ||\n                    (isValid('email') === 'is-valid' && borderColor.validColor)\n                  } solid 1px`,\n                  borderRadius: '8px',\n                  padding: '8px 18px',\n                }}\n              />\n              {formik.errors.email &&\n                formik.touched.email &&\n                errorMesage(formik.errors.email)}\n            </label>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n\n              gap: { xs: '18px', md: '24px' },\n            }}\n          >\n            <label>\n              <Typography\n                sx={{\n                  color: '#111',\n                  fontSize: '12px',\n                  lineHeight: '14px',\n                  mb: '8px',\n                }}\n              >\n                Phone\n              </Typography>\n              <InputBase\n                onChange={e => handlePhoneNumberChange(e, formik.setFieldValue)}\n                onBlur={formik.handleBlur}\n                value={formik.values.phone}\n                type=\"phone\"\n                name=\"phone\"\n                placeholder=\"ex. 01 (234) 567 89 01\"\n                sx={{\n                  width: '100%',\n                  fontSize: '14px',\n                  fontWeight: 600,\n                  color: '#111',\n                  border: `${\n                    (isValid('phone') === 'is-invalid' &&\n                      borderColor.invalidColor) ||\n                    (isValid('phone') === 'is-valid' && borderColor.validColor)\n                  } solid 1px`,\n                  borderRadius: '8px',\n                  padding: '8px 18px',\n                }}\n              />\n              {formik.errors.phone &&\n                formik.touched.phone &&\n                errorMesage(formik.errors.phone)}\n            </label>\n            <label>\n              <Typography\n                sx={{\n                  color: '#111',\n                  fontSize: '12px',\n                  lineHeight: '14px',\n                  mb: '8px',\n                }}\n              >\n                Skype\n              </Typography>\n              <InputBase\n                onChange={handleInputChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.skype}\n                type=\"text\"\n                name=\"skype\"\n                placeholder=\"ex. +1234567890\"\n                sx={{\n                  width: '100%',\n                  fontSize: '14px',\n                  fontWeight: 600,\n                  color: '#111',\n                  border: `${\n                    (isValid('skype') === 'is-invalid' &&\n                      borderColor.invalidColor) ||\n                    (isValid('skype') === 'is-valid' && borderColor.validColor)\n                  } solid 1px`,\n                  borderRadius: '8px',\n                  padding: '8px 18px',\n                }}\n              />\n              {formik.errors.skype &&\n                formik.touched.skype &&\n                errorMesage(formik.errors.skype)}\n            </label>\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <Button\n            sx={{\n              textTransform: 'none',\n              backgroundColor: '#2B78EF',\n              marginTop: { xs: '40px', lg: '88px' },\n              width: '262px',\n              padding: 2,\n              borderRadius: 4,\n              fontSize: 14,\n              fontWeight: 600,\n              fontFamily: 'Inter, sans-serif',\n            }}\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={!isFormChanged}\n          >\n            Save changes\n          </Button>\n        </Box>\n      </Box>\n    </form>\n  );\n};\n\nexport default UserForm;\n","import UserForm from 'components/userForm/userForm';\nimport * as React from 'react';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nconst Account = () => {\n  return (<LocalizationProvider dateAdapter={AdapterDayjs}>\n    <UserForm />;\n  </LocalizationProvider>)\n\n};\n\nexport default Account;\n"],"names":["borderColor","errorMesage","errorName","Typography","sx","fontSize","lineHeight","color","marginTop","validationSchema","Yup","shape","username","min","max","required","email","phone","notRequired","skype","matches","message","userState","useSelector","selectUser","useState","selectAvatar","setSelectAvatar","isFormChanged","setIsFormChanged","dispatch","useDispatch","initialValues","name","avatarURL","birthday","formik","useFormik","onSubmit","values","updateUser","handleInputChange","event","target","value","setFieldValue","isValid","field","touched","errors","handleSubmit","Box","width","xs","md","lg","borderRadius","padding","marginLeft","marginRight","position","display","flexDirection","alignItems","backgroundColor","Avatar","alt","src","path","height","border","mr","ml","mb","top","left","SvgIcon","stroke","href","Sprite","right","cursor","id","type","onChange","file","currentTarget","files","URL","createObjectURL","onBlur","handleBlur","style","htmlFor","fontWeight","textAlign","gap","justifyContent","mt","InputBase","placeholder","DatePicker","date","formattedDate","moment","$d","format","defaultValue","dayjs","slice","e","replace","length","handlePhoneNumberChange","Button","textTransform","fontFamily","variant","disabled","LocalizationProvider","dateAdapter","AdapterDayjs"],"sourceRoot":""}