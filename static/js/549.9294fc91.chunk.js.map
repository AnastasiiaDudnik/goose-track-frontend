{"version":3,"file":"static/js/549.9294fc91.chunk.js","mappings":"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","sources":["hooks/useResponse.js","components/registerForm/registerForm.jsx","pages/registerPage/registerPage.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import { useMediaQuery } from 'react-responsive';\n\nexport const useResponse = () => {\n  const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const viewportHeight = window.innerHeight;\n\n  return {\n    isDesktop,\n    isTablet,\n    isMobile,\n    viewportHeight,\n  };\n};\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  OutlinedInput,\n  SvgIcon,\n  Typography,\n} from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport goose from './sign up 1.png';\nimport Sprite from 'icons/sprite.svg';\nimport { useResponse } from 'hooks/useResponse';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name must be 2 characters long')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n});\n\nconst borderColor = {\n  validColor: '#3CBC81',\n  invalidColor: '#E74A3B',\n};\n\nconst RegisterForm = () => {\n  const { isDesktop } = useResponse();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={({ name, email, password }, { setSubmitting }) => {\n        dispatch(register({ name, email, password }));\n        setSubmitting(false);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n        return (\n          <Box\n            sx={{\n              backgroundColor: '#DCEBF7',\n              height: '100%',\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'fixed',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <Container\n              sx={{\n                position: 'relative',\n                width: { xs: '335px', md: '480px' },\n                borderRadius: 2,\n                backgroundColor: '#fff',\n                pr: { xs: 3, md: 5 },\n                pl: { xs: 3, md: 5 },\n                pt: 5,\n                pb: 5,\n              }}\n            >\n              <Form>\n                <Typography\n                  variant=\"h2\"\n                  sx={{\n                    fontSize: 18,\n                    color: '#3E85F3',\n                    mb: 4,\n                    fontWeight: 600,\n                  }}\n                >\n                  Sign Up\n                </Typography>\n                <label style={{ position: 'relative' }}>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Name\n                  </Typography>\n                  <Field\n                    as={OutlinedInput}\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                    placeholder=\"Enter your name\"\n                    sx={{\n                      border: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      } solid 1px`,\n                      fontFamily: 'Inter, sans-serif',\n                      width: '100%',\n                      borderRadius: 2,\n                      fontSize: 16,\n                      lineHeight: '18px',\n                      fontWeight: 600,\n                    }}\n                  />\n                  {isValid('name') === 'is-valid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#done`}></use>\n                      </SvgIcon>\n                      <Typography\n                        sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                      >\n                        This is a CORRECT name\n                      </Typography>\n                    </>\n                  )}\n                  {isValid('name') === 'is-invalid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#error-input`}></use>\n                      </SvgIcon>\n                    </>\n                  )}\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Email\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                      placeholder=\"Enter email\"\n                      sx={{\n                        border: `${\n                          (isValid('email') === 'is-invalid' &&\n                            borderColor.invalidColor) ||\n                          (isValid('email') === 'is-valid' &&\n                            borderColor.validColor)\n                        } solid 1px`,\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                        fontWeight: 600,\n                      }}\n                    />\n                    {isValid('email') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT email\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('email') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('password') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('password') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Password\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      placeholder=\"Enter password\"\n                      sx={{\n                        border: `${\n                          (isValid('email') === 'is-invalid' &&\n                            borderColor.invalidColor) ||\n                          (isValid('email') === 'is-valid' &&\n                            borderColor.validColor)\n                        } solid 1px`,\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                      }}\n                    />\n                    {isValid('password') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT password\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('password') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <Button\n                  sx={{\n                    textTransform: 'none',\n                    backgroundColor: '#2B78EF',\n                    marginTop: 4,\n                    width: '100%',\n                    padding: 2,\n                    borderRadius: 4,\n                    fontSize: 14,\n                    fontWeight: 600,\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                  variant=\"contained\"\n                  endIcon={\n                    <SvgIcon\n                      stroke=\"currentColor\"\n                      sx={{\n                        width: { xs: '20px', md: '24px' },\n                        height: { xs: '20px', md: '24px' },\n                      }}\n                    >\n                      <use href={`${Sprite}#log-in`}></use>\n                    </SvgIcon>\n                  }\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n              </Form>\n            </Container>\n            <Link to={'/login'}>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  fontSize: 12,\n                  color: '#3E85F3',\n                  mt: 2.25,\n                  fontWeight: 600,\n                  textDecoration: 'underline',\n                }}\n              >\n                Log In\n              </Typography>\n            </Link>\n            {isDesktop && (\n              <img\n                style={{\n                  display: { xs: 'none' },\n                  position: 'absolute',\n                  left: '49px',\n                  bottom: '0px',\n                }}\n                src={goose}\n                alt=\"goose-racket\"\n              />\n            )}\n          </Box>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/registerForm/registerForm\"\n\n\nconst RegisterPage = ()=>{\n    return (\n        <RegisterForm/>\n    )\n}\n\nexport default RegisterPage","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","import PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["useResponse","isDesktop","useMediaQuery","minWidth","isTablet","maxWidth","isMobile","viewportHeight","window","innerHeight","ValidationSchema","Yup","shape","name","min","required","email","password","borderColor","dispatch","useDispatch","initialValues","validationSchema","onSubmit","setSubmitting","register","values","errors","touched","handleChange","handleBlur","isValid","field","Box","sx","backgroundColor","height","width","display","alignItems","position","flexDirection","justifyContent","Container","xs","md","borderRadius","pr","pl","pt","pb","Typography","variant","fontSize","color","mb","fontWeight","style","as","OutlinedInput","type","onChange","onBlur","value","placeholder","border","fontFamily","lineHeight","SvgIcon","stroke","top","right","href","Sprite","mt","component","marginTop","Button","textTransform","padding","endIcon","to","textDecoration","left","bottom","src","goose","alt","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","createStyledComponent","useThemeProps","ContainerRoot","theme","_extends","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","React","ref","className","other","_objectWithoutPropertiesLoose","_jsx","clsx","createContainer","styled"],"sourceRoot":""}