{"version":3,"file":"static/js/549.a074f5cd.chunk.js","mappings":"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","sources":["components/registerForm/registerForm.jsx","pages/registerPage/registerPage.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  OutlinedInput,\n  SvgIcon,\n  Typography,\n} from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport goose from './sign up 1.png';\nimport Sprite from 'icons/sprite.svg';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(4, 'Name must be 4 characters long')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n});\n\nconst borderColor = {\n  validColor: '#3CBC81',\n  invalidColor: '#E74A3B',\n};\n\nconst RegisterForm = () => {\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n        setSubmitting(false);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n        return (\n          <Box\n            sx={{\n              backgroundColor: '#DCEBF7',\n              height: '100%',\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'fixed',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <Container\n              sx={{\n                position: 'relative',\n                width: { xs: '335px', md: '480px' },\n                borderRadius: 2,\n                backgroundColor: '#fff',\n                pr: { xs: 3, md: 5 },\n                pl: { xs: 3, md: 5 },\n                pt: 5,\n                pb: 5,\n              }}\n            >\n              <Form>\n                <Typography\n                  variant=\"h2\"\n                  sx={{\n                    fontSize: 18,\n                    color: '#3E85F3',\n                    mb: 4,\n                    fontWeight: 600,\n                  }}\n                >\n                  Sign Up\n                </Typography>\n                <label style={{ position: 'relative' }}>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Name\n                  </Typography>\n                  <Field\n                    as={OutlinedInput}\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                    placeholder=\"Enter your name\"\n                    sx={{\n                      border: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      } solid 1px`,\n                      fontFamily: 'Inter, sans-serif',\n                      width: '100%',\n                      borderRadius: 2,\n                      fontSize: 16,\n                      lineHeight: '18px',\n                      fontWeight: 600,\n                    }}\n                  />\n                  {isValid('name') === 'is-valid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#done`}></use>\n                      </SvgIcon>\n                      <Typography\n                        sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                      >\n                        This is a CORRECT email\n                      </Typography>\n                    </>\n                  )}\n                  {isValid('name') === 'is-invalid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#error-input`}></use>\n                      </SvgIcon>\n                    </>\n                  )}\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Email\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                      placeholder=\"Enter email\"\n                      sx={{\n                        border: `${\n                          (isValid('email') === 'is-invalid' &&\n                            borderColor.invalidColor) ||\n                          (isValid('email') === 'is-valid' &&\n                            borderColor.validColor)\n                        } solid 1px`,\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                        fontWeight: 600,\n                      }}\n                    />\n                    {isValid('email') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT email\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('email') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('password') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('password') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Password\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      placeholder=\"Enter password\"\n                      sx={{\n                        border: 'rgba(220, 227, 229, 0.60);',\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                      }}\n                    />\n                    {isValid('password') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT email\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('password') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <Button\n                  sx={{\n                    textTransform: 'none',\n                    backgroundColor: '#2B78EF',\n                    marginTop: 4,\n                    width: '100%',\n                    padding: 2,\n                    borderRadius: 4,\n                    fontSize: 14,\n                    fontWeight: 600,\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                  variant=\"contained\"\n                  endIcon={\n                    <SvgIcon\n                      stroke=\"currentColor\"\n                      sx={{\n                        width: { xs: '20px', md: '24px' },\n                        height: { xs: '20px', md: '24px' },\n                      }}\n                    >\n                      <use href={`${Sprite}#log-in`}></use>\n                    </SvgIcon>\n                  }\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n              </Form>\n            </Container>\n            <Link to={'/login'}>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  fontSize: 12,\n                  color: '#3E85F3',\n                  mt: 2.25,\n                  fontWeight: 600,\n                  textDecoration: 'underline',\n                }}\n              >\n                Log In\n              </Typography>\n            </Link>\n            {window.innerWidth > 1440 ? (\n              <img\n                style={{\n                  display: { xs: 'none' },\n                  position: 'absolute',\n                  left: '49px',\n                  bottom: '0px',\n                }}\n                src={goose}\n                alt=\"goose-racket\"\n              />\n            ) : (\n              <></>\n            )}\n          </Box>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/registerForm/registerForm\"\n\n\nconst RegisterPage = ()=>{\n    return (\n        <RegisterForm/>\n    )\n}\n\nexport default RegisterPage"],"names":["ValidationSchema","Yup","shape","name","min","required","email","password","borderColor","initialValues","validationSchema","onSubmit","values","setSubmitting","console","log","errors","touched","handleChange","handleBlur","isValid","handleSubmit","isSubmitting","field","Box","sx","backgroundColor","height","width","display","alignItems","position","flexDirection","justifyContent","Container","xs","md","borderRadius","pr","pl","pt","pb","Typography","variant","fontSize","color","mb","fontWeight","style","as","OutlinedInput","type","onChange","onBlur","value","placeholder","border","fontFamily","lineHeight","SvgIcon","stroke","top","right","href","Sprite","mt","component","marginTop","Button","textTransform","padding","endIcon","Link","to","textDecoration","window","innerWidth","left","bottom","src","goose","alt"],"sourceRoot":""}