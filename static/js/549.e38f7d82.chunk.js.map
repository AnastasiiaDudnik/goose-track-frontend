{"version":3,"file":"static/js/549.e38f7d82.chunk.js","mappings":"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","sources":["icons/sprite.svg","components/registerForm/registerForm.jsx","pages/registerPage/registerPage.jsx"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M24 8 8 24M8 8l16 16\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"menu\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.353,\n    d: \"M4 16h24M4 8h24M4 24h24\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"log-in\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3.2,\n    d: \"M20 4h1.6c2.24 0 3.36 0 4.216.436a3.996 3.996 0 0 1 1.748 1.748C28 7.04 28 8.16 28 10.4v11.2c0 2.24 0 3.36-.436 4.216a4.001 4.001 0 0 1-1.748 1.748C24.96 28 23.84 28 21.6 28H20M13.333 9.333 20 16m0 0-6.667 6.667M20 16H4\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"chart\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.8 9.037c0-.759.001-1.305.037-1.732.037-.436.103-.596.134-.648a.058.058 0 0 1 .015-.019h.001c.009-.006.045-.031.138-.06.208-.064.569-.112 1.207-.112s1 .048 1.207.112a.467.467 0 0 1 .138.06h.001c.004.003.007.005.015.019.031.052.097.212.134.648.037.427.037.973.037 1.732v13.926c0 .896-.051 1.503-.135 1.915-.084.414-.182.531-.199.548a.09.09 0 0 1-.029.02.68.68 0 0 1-.169.046c-.221.038-.51.041-1.002.041-.499 0-.793-.003-1.015-.042a.719.719 0 0 1-.168-.045c-.016-.008-.02-.012-.025-.017-.015-.016-.111-.131-.194-.547-.082-.413-.132-1.022-.132-1.92V9.036zM25.333 4.2c-1.288 0-2.612.136-3.305 1.291-.302.504-.403 1.084-.449 1.621-.046.535-.046 1.177-.046 1.884v13.968c0 .954.05 1.734.175 2.363.125.625.343 1.205.761 1.652.439.47.975.664 1.465.748.435.075.92.074 1.344.074h.107c.418 0 .9 0 1.333-.074.489-.084 1.023-.278 1.463-.745.42-.445.643-1.023.771-1.651.128-.63.18-1.412.18-2.367V8.996c0-.706 0-1.349-.046-1.884-.046-.536-.147-1.117-.449-1.621C27.944 4.336 26.62 4.2 25.332 4.2zm-10.828 8.467c-.033.301-.035.651-.035 1.111v9.778l-.001.033c-.033 1.146.176 1.533.3 1.666.107.115.376.279 1.23.279.834 0 1.112-.162 1.226-.283.127-.134.34-.522.303-1.658l-.001-.036v-9.778c0-.461-.001-.811-.035-1.111-.033-.296-.089-.448-.137-.529l-.002-.003c-.031-.053-.198-.335-1.356-.335s-1.324.282-1.356.335l-.002.003c-.048.081-.104.232-.137.529zm-1.807-1.694c.639-1.066 1.819-1.44 3.302-1.44s2.663.374 3.302 1.44c.284.475.395.99.445 1.444.049.438.049.908.049 1.328v9.793c.039 1.301-.16 2.461-.921 3.268-.777.823-1.869.995-2.875.995-1.015 0-2.113-.169-2.887-.999-.754-.808-.944-1.97-.909-3.261v-9.795c0-.42 0-.89.049-1.328.05-.454.161-.969.445-1.444zm-7.529 8.386c-.035.352-.036.776-.036 1.344v3.689c0 .641.155.816.23.88.122.103.453.261 1.303.261.832 0 1.167-.156 1.296-.264.081-.068.237-.247.237-.877v-3.669l-.009-.27c-.015-.439-.026-.782-.059-1.085-.039-.363-.099-.533-.146-.616l-.001-.002c-.012-.027-.127-.285-1.319-.285-1.196 0-1.336.261-1.355.297l-.001.003c-.046.078-.106.242-.141.593zm-1.813-1.741c.654-1.112 1.877-1.418 3.31-1.418 1.436 0 2.648.308 3.288 1.431.276.485.379 1.02.43 1.495.043.395.057.841.072 1.281l.009.257v3.729c0 .991-.256 1.949-1.047 2.613-.744.624-1.741.795-2.753.795-1.021 0-2.024-.169-2.767-.798-.79-.669-1.033-1.63-1.033-2.61v-3.725c0-.522 0-1.056.047-1.532.048-.487.155-1.029.442-1.517z\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"log-out\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 3.2,\n    d: \"M21.333 22.667 28 16m0 0-6.667-6.667M28 16H12m0-12h-1.6c-2.24 0-3.36 0-4.216.436a3.991 3.991 0 0 0-1.748 1.748C4 7.04 4 8.16 4 10.4v11.2c0 2.24 0 3.36.436 4.216a3.996 3.996 0 0 0 1.748 1.748C7.04 28 8.16 28 10.4 28H12\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M12 4h8M4 8h24M6.667 8l.801 12.018c.149 2.231.223 3.347.588 4.243a6 6 0 0 0 3.672 3.435c.919.304 2.037.304 4.273.304 2.236 0 3.354 0 4.273-.304a5.999 5.999 0 0 0 3.671-3.435c.365-.896.439-2.012.588-4.243L25.334 8\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"m3.333 28.667 7.399-2.846c.473-.182.71-.273.931-.392.197-.106.384-.227.56-.364.198-.154.378-.333.736-.692l15.04-15.04A3.77 3.77 0 1 0 22.666 4L7.626 19.04c-.359.359-.538.538-.692.736a3.902 3.902 0 0 0-.364.561c-.119.221-.21.458-.392.931l-2.846 7.399zm0 0 2.744-7.135c.196-.511.295-.766.463-.883a.665.665 0 0 1 .505-.107c.201.038.395.232.782.619l3.012 3.012c.387.387.58.58.619.782a.665.665 0 0 1-.107.505c-.117.168-.372.267-.883.463l-7.135 2.744z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M4.451 9.333a13.328 13.328 0 0 1 11.55-6.667c7.364 0 13.333 5.97 13.333 13.333s-5.97 13.333-13.333 13.333a13.329 13.329 0 0 1-11.55-6.667\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.6,\n    d: \"M16 21.333 21.333 16 16 10.667M2.667 16h18.667\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"plus-circle\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M16 10.667v10.667M10.667 16h10.667m7.999 0c0 7.364-5.97 13.333-13.333 13.333S2.667 23.363 2.667 16C2.667 8.636 8.637 2.667 16 2.667S29.333 8.637 29.333 16z\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sun\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M9.324 16c0 3.681 2.995 6.676 6.676 6.676s6.676-2.995 6.676-6.676S19.681 9.324 16 9.324 9.324 12.319 9.324 16zM16 11.991c2.211 0 4.009 1.799 4.009 4.009S18.21 20.009 16 20.009c-2.211 0-4.009-1.799-4.009-4.009S13.79 11.991 16 11.991zm-1.336 13.342h2.667v4h-2.667v-4zm0-22.666h2.667v4h-2.667v-4zm-12 12h4v2.667h-4v-2.667zm22.667 0h4v2.667h-4v-2.667zM5.625 24.484l2.827-2.829 1.887 1.885-2.827 2.829-1.887-1.885zM21.653 8.459l2.829-2.829 1.885 1.885-2.829 2.829-1.885-1.885zM8.456 10.345 5.627 7.516l1.887-1.885 2.827 2.829-1.884 1.885zm17.912 14.14-1.885 1.885-2.829-2.829 1.885-1.885 2.829 2.829z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"moon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3e85f3\",\n    style: {\n      fill: \"var(--color2, #3e85f3)\"\n    },\n    d: \"M27.656 17.393c-.904.24-1.834.361-2.769.361-2.847 0-5.52-1.107-7.528-3.115a10.702 10.702 0 0 1-2.751-10.298 1.33 1.33 0 0 0-.943-1.63 1.345 1.345 0 0 0-.69 0A13.346 13.346 0 0 0 6.99 6.154c-5.197 5.197-5.197 13.657 0 18.857a13.26 13.26 0 0 0 9.429 3.907 13.245 13.245 0 0 0 9.427-3.905 13.343 13.343 0 0 0 3.444-5.988 1.33 1.33 0 0 0-.347-1.285 1.34 1.34 0 0 0-1.285-.346zm-3.696 5.735a10.594 10.594 0 0 1-7.542 3.124 10.585 10.585 0 0 1-7.544-3.125c-4.157-4.159-4.157-10.927 0-15.085a10.562 10.562 0 0 1 2.747-1.977 13.365 13.365 0 0 0 3.854 10.464 13.29 13.29 0 0 0 10.464 3.854 10.704 10.704 0 0 1-1.979 2.745z\"\n  })), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"calendar\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M28 13.333H4m24 3.334v-4.933c0-2.24 0-3.36-.436-4.216a3.991 3.991 0 0 0-1.748-1.748c-.856-.436-1.976-.436-4.216-.436H10.4c-2.24 0-3.36 0-4.216.436a3.991 3.991 0 0 0-1.748 1.748C4 8.374 4 9.494 4 11.734v11.2c0 2.24 0 3.36.436 4.216a3.991 3.991 0 0 0 1.748 1.748c.856.436 1.976.436 4.216.436H16m5.333-26.667V8M10.667 2.667V8m8.666 17.333L22 28l6-6\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeWidth: 2.667,\n    d: \"M21.333 24 24 26.667l5.333-5.333M16 20.667h-6c-1.861 0-2.791 0-3.548.23a5.331 5.331 0 0 0-3.555 3.556c-.23.757-.23 1.687-.23 3.548v0M13.333 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"error-input\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E74A3B\",\n    stroke: \"none\",\n    d: \"M11 15h2v2h-2v-2Zm0-8h2v6h-2V7Zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2ZM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8Z\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"done\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#3CBC81\",\n    stroke: \"none\",\n    d: \"m10.6 13.8-2.175-2.175a.89.89 0 0 0-.687-.262.976.976 0 0 0-.688.287.948.948 0 0 0-.275.7c0 .283.092.517.275.7L9.9 15.9a.948.948 0 0 0 .7.275.948.948 0 0 0 .7-.275l5.675-5.675a.894.894 0 0 0 .263-.688.979.979 0 0 0-.288-.687.948.948 0 0 0-.7-.275.948.948 0 0 0-.7.275L10.6 13.8ZM12 22a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12c0-1.383.263-2.683.788-3.9a10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2c1.383 0 2.683.262 3.9.787a10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22Zm0-2c2.217 0 4.104-.779 5.663-2.337C19.221 16.104 20 14.217 20 12s-.779-4.104-2.337-5.663C16.104 4.779 14.217 4 12 4s-4.104.779-5.662 2.337C4.779 7.896 4 9.783 4 12s.78 4.104 2.338 5.663C7.896 19.221 9.783 20 12 20Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.0f30cdbc30470c3d5fd4bb1ccd3c29e5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  OutlinedInput,\n  SvgIcon,\n  Typography,\n} from '@mui/material';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport goose from './sign up 1.png';\nimport Sprite from 'icons/sprite.svg';\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(4, 'Name must be 4 characters long')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n});\n\nconst borderColor = {\n  validColor: '#3CBC81',\n  invalidColor: '#E74A3B',\n};\n\nconst RegisterForm = () => {\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        console.log(values);\n        setSubmitting(false);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n        return (\n          <Box\n            sx={{\n              backgroundColor: '#DCEBF7',\n              height: '100%',\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              position: 'fixed',\n              flexDirection: 'column',\n              justifyContent: 'center',\n            }}\n          >\n            <Container\n              sx={{\n                position: 'relative',\n                width: { xs: '335px', md: '480px' },\n                borderRadius: 2,\n                backgroundColor: '#fff',\n                pr: { xs: 3, md: 5 },\n                pl: { xs: 3, md: 5 },\n                pt: 5,\n                pb: 5,\n              }}\n            >\n              <Form>\n                <Typography\n                  variant=\"h2\"\n                  sx={{\n                    fontSize: 18,\n                    color: '#3E85F3',\n                    mb: 4,\n                    fontWeight: 600,\n                  }}\n                >\n                  Sign Up\n                </Typography>\n                <label style={{ position: 'relative' }}>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Name\n                  </Typography>\n                  <Field\n                    as={OutlinedInput}\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                    placeholder=\"Enter your name\"\n                    sx={{\n                      border: `${\n                        (isValid('name') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('name') === 'is-valid' &&\n                          borderColor.validColor)\n                      } solid 1px`,\n                      fontFamily: 'Inter, sans-serif',\n                      width: '100%',\n                      borderRadius: 2,\n                      fontSize: 16,\n                      lineHeight: '18px',\n                      fontWeight: 600,\n                    }}\n                  />\n                  {isValid('name') === 'is-valid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#done`}></use>\n                      </SvgIcon>\n                      <Typography\n                        sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                      >\n                        This is a CORRECT email\n                      </Typography>\n                    </>\n                  )}\n                  {isValid('name') === 'is-invalid' && (\n                    <>\n                      <SvgIcon\n                        stroke=\"currentColor\"\n                        sx={{\n                          width: { xs: '20px', md: '24px' },\n                          height: { xs: '20px', md: '24px' },\n                          position: 'absolute',\n                          top: '48px',\n                          right: '10px',\n                        }}\n                      >\n                        <use href={`${Sprite}#error-input`}></use>\n                      </SvgIcon>\n                    </>\n                  )}\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('email') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('email') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Email\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                      placeholder=\"Enter email\"\n                      sx={{\n                        border: `${\n                          (isValid('email') === 'is-invalid' &&\n                            borderColor.invalidColor) ||\n                          (isValid('email') === 'is-valid' &&\n                            borderColor.validColor)\n                        } solid 1px`,\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                        fontWeight: 600,\n                      }}\n                    />\n                    {isValid('email') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT email\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('email') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <label>\n                  <Typography\n                    sx={{\n                      fontSize: 14,\n                      mb: 1,\n                      mt: 3,\n                      fontWeight: 600,\n                      color: `${\n                        (isValid('password') === 'is-invalid' &&\n                          borderColor.invalidColor) ||\n                        (isValid('password') === 'is-valid' &&\n                          borderColor.validColor)\n                      }`,\n                    }}\n                  >\n                    Password\n                  </Typography>\n                  <div style={{ position: 'relative' }}>\n                    <Field\n                      as={OutlinedInput}\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      placeholder=\"Enter password\"\n                      sx={{\n                        border: 'rgba(220, 227, 229, 0.60);',\n                        width: '100%',\n                        height: 54,\n                        borderRadius: 2,\n                      }}\n                    />\n                    {isValid('password') === 'is-valid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#done`}></use>\n                        </SvgIcon>\n                        <Typography\n                          sx={{ color: '#3CBC81', fontSize: 12, mt: '8px' }}\n                        >\n                          This is a CORRECT email\n                        </Typography>\n                      </>\n                    )}\n                    {isValid('password') === 'is-invalid' && (\n                      <>\n                        <SvgIcon\n                          stroke=\"currentColor\"\n                          sx={{\n                            width: { xs: '20px', md: '24px' },\n                            height: { xs: '20px', md: '24px' },\n                            position: 'absolute',\n                            top: '20px',\n                            right: '10px',\n                          }}\n                        >\n                          <use href={`${Sprite}#error-input`}></use>\n                        </SvgIcon>\n                      </>\n                    )}\n                  </div>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    style={{ fontSize: 12, color: '#DA1414', marginTop: 8 }}\n                  />\n                </label>\n                <Button\n                  sx={{\n                    textTransform: 'none',\n                    backgroundColor: '#2B78EF',\n                    marginTop: 4,\n                    width: '100%',\n                    padding: 2,\n                    borderRadius: 4,\n                    fontSize: 14,\n                    fontWeight: 600,\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                  variant=\"contained\"\n                  endIcon={\n                    <SvgIcon\n                      stroke=\"currentColor\"\n                      sx={{\n                        width: { xs: '20px', md: '24px' },\n                        height: { xs: '20px', md: '24px' },\n                      }}\n                    >\n                      <use href={`${Sprite}#log-in`}></use>\n                    </SvgIcon>\n                  }\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n              </Form>\n            </Container>\n            <Link to={'/login'}>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  fontSize: 12,\n                  color: '#3E85F3',\n                  mt: 2.25,\n                  fontWeight: 600,\n                  textDecoration: 'underline',\n                }}\n              >\n                Log In\n              </Typography>\n            </Link>\n            {window.innerWidth > 1440 ? (\n              <img\n                style={{\n                  display: { xs: 'none' },\n                  position: 'absolute',\n                  left: '49px',\n                  bottom: '0px',\n                }}\n                src={goose}\n                alt=\"goose-racket\"\n              />\n            ) : (\n              <></>\n            )}\n          </Box>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/registerForm/registerForm\"\n\n\nconst RegisterPage = ()=>{\n    return (\n        <RegisterForm/>\n    )\n}\n\nexport default RegisterPage"],"names":["ValidationSchema","Yup","shape","name","min","required","email","password","borderColor","initialValues","validationSchema","onSubmit","values","setSubmitting","console","log","errors","touched","handleChange","handleBlur","isValid","handleSubmit","isSubmitting","field","Box","sx","backgroundColor","height","width","display","alignItems","position","flexDirection","justifyContent","Container","xs","md","borderRadius","pr","pl","pt","pb","Typography","variant","fontSize","color","mb","fontWeight","style","as","OutlinedInput","type","onChange","onBlur","value","placeholder","border","fontFamily","lineHeight","SvgIcon","stroke","top","right","href","Sprite","mt","component","marginTop","Button","textTransform","padding","endIcon","Link","to","textDecoration","window","innerWidth","left","bottom","src","goose","alt"],"sourceRoot":""}