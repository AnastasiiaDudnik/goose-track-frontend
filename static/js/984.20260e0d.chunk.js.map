{"version":3,"file":"static/js/984.20260e0d.chunk.js","mappings":"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","sources":["components/variables/colors.jsx","components/periodPaginator/periodPaginator.jsx","components/periodTypeSelect/periodTypeSelect.jsx","components/calendarToolbar/calendarToolbar.jsx","pages/calendarPage/calendarPage.jsx"],"sourcesContent":["const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };","import { Button, SvgIcon, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport { DateCalendar } from '@mui/x-date-pickers';\nimport { colorsLight } from 'components/variables/colors';\nimport dayjs from 'dayjs';\nimport Sprite from 'icons/sprite.svg';\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\n\nexport const PeriodPaginator = ({\n  mode,\n  type,\n  selectDate,\n  date,\n  nextArray,\n  backArray,\n}) => {\n\n\n  const calendarRef = useRef(null);\n  const [calendar, setCalendar] = useState(false);\n\n  const formattedDate = moment(date).locale('uk').format('MMMM YYYY');\n  const chooseFormattedDate = moment(date).locale('uk').format('DD MMMM YYYY');\n  \n  const dateObj = dayjs(date);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (calendarRef.current && !calendarRef.current.contains(event.target)) {\n        setCalendar(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const handleDatePicker = date => {\n    const today = moment(date.$d, 'YYYY-MM-DD');\n    const urlDate = today.format('YYYY-MM-DD');\n    selectDate(urlDate);\n    setCalendar(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }} ref={calendarRef}>\n      <Box\n        sx={{\n          width: '131px',\n          backgroundColor: colorsLight.accentColor,\n          textAlign: 'center',\n          color: '#fff',\n          mt: 'auto',\n          mb: 'auto',\n          pt: '8px',\n          pb: '8px',\n          borderRadius: '8px',\n        }}\n      >\n        <Typography\n          sx={{\n            color: '#fff',\n            fontSize: '16px',\n            fontWeight: 700,\n            lineHeight: '18px',\n            textTransform: 'uppercase',\n            textAlign: 'center',\n            position: 'reletive',\n            cursor: 'pointer',\n          }}\n          onClick={() => setCalendar(!calendar)}\n        >\n          {type === 'month'\n            ? formattedDate.slice(0, date.slength)\n            : chooseFormattedDate}\n        </Typography>\n      </Box>\n      <DateCalendar\n        value={dateObj}\n        sx={{\n          display: calendar ? 'block' : 'none',\n          position: 'absolute',\n          zIndex: 100,\n          backgroundColor: colorsLight.accentColor,\n          top: '165px',\n          borderRadius: '8px',\n          color: '#fff',\n          '& *': { color: '#fff' },\n          '& * .css-x2lq26-MuiButtonBase-root-MuiPickersDay-root:hover': {\n            backgroundColor: '#00a3ff',\n          },\n        }}\n        onChange={handleDatePicker}\n      />\n      <Box\n        sx={{\n          maxHeight: '34px',\n          borderRadius: '8px',\n          border:\n            mode === 'dark'\n              ? '1px solid rgba(220,227,229, 0.80)'\n              : '1px solid #FFFFFF26',\n          ml: '8px',\n        }}\n      >\n        <Button\n          onClick={() => {\n            backArray();\n          }}\n          sx={{\n            minWidth: '38px',\n            backgroundColor: mode === 'dark' ? '#fff' : '#21222C',\n            textAlign: 'center',\n            borderTopLeftRadius: '8px',\n            borderBottomLeftRadius: '8px',\n            borderBottomRightRadius: '0px',\n            borderTopRightRadius: '0px',\n            padding: '4px 0px',\n          }}\n        >\n          <SvgIcon style={{ stroke: mode === 'dark' ? '#000' : '#fff' }}>\n            <use href={`${Sprite}#chevron-left`} />\n          </SvgIcon>\n        </Button>\n        <Button\n          onClick={() => {\n            nextArray();\n          }}\n          sx={{\n            minWidth: '38px',\n            backgroundColor: mode === 'dark' ? '#fff' : '#21222C',\n            textAlign: 'center',\n            borderTopLeftRadius: '0px',\n            borderBottomLeftRadius: '0px',\n            borderBottomRightRadius: '8px',\n            borderTopRightRadius: '8px',\n            borderLeft:\n              mode === 'dark'\n                ? '1px solid rgba(220,227,229, 0.80)'\n                : '1px solid #FFFFFF26',\n            padding: '4px 0px',\n          }}\n        >\n          <SvgIcon style={{ stroke: mode === 'dark' ? '#000' : '#fff' }}>\n            <use href={`${Sprite}#chevron-right`} />\n          </SvgIcon>\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Typography,\n} from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nexport const PeriodTypeSelect = ({ mode, setType, date }) => {\n  return (\n    <List\n      component=\"nav\"\n      sx={{\n        p: 0,\n        m: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n        width: '164px',\n      }}\n    >\n      <ListItem sx={{ p: 0 }}>\n        <ListItemButton\n          LinkComponent={NavLink}\n          onClick={() => setType('month')}\n          to={`/main/calendar/month/${date}`}\n          sx={{\n            backgroundColor: mode !== 'dark' ? '#21222C' : '#E3F3FF',\n            color: '#3E85F3',\n            py: { xs: '8px' },\n            px: { xs: '16px' },\n            borderRadius: '8px 0px 0px 8px',\n            borderRight: `1px solid ${\n              mode !== 'dark'\n                ? 'rgba(255, 255, 255, 0.15)'\n                : 'rgba(62, 133, 243, 0.20)'\n            } `,\n            '&.active, &:hover, &:focus': {\n              backgroundColor: mode !== 'dark' ? '#3E85F3' : '#CAE8FF',\n              color: mode !== 'dark' ? '#FFFFFF' : '#3E85F3',\n            },\n          }}\n        >\n          <ListItemText\n            sx={{ m: 0 }}\n            primary={\n              <Typography\n                sx={{\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 500,\n                  fontSize: { xs: '14px', md: '16px' },\n                  lineHeight: { xs: 1.286, md: 1.125 },\n                }}\n              >\n                Month\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </ListItem>\n      <ListItem sx={{ p: 0 }}>\n        <ListItemButton\n          LinkComponent={NavLink}\n          onClick={() => setType('day')}\n          to={`/main/calendar/day/${date}`}\n          sx={{\n            backgroundColor: mode !== 'dark' ? '#21222C' : '#E3F3FF',\n            color: '#3E85F3',\n            py: { xs: '8px' },\n            px: { xs: '25px', md: '26px' },\n            borderRadius: '0px 8px 8px 0px',\n            '&.active, &:hover, &:focus': {\n              backgroundColor: mode !== 'dark' ? '#3E85F3' : '#CAE8FF',\n              color: mode !== 'dark' ? '#FFFFFF' : '#3E85F3',\n            },\n          }}\n        >\n          <ListItemText\n            sx={{ m: 0 }}\n            primary={\n              <Typography\n                sx={{\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 500,\n                  fontSize: { xs: '14px', md: '16px' },\n                  lineHeight: { xs: 1.286, md: 1.125 },\n                }}\n              >\n                Day\n              </Typography>\n            }\n          />\n        </ListItemButton>\n      </ListItem>\n    </List>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { PeriodPaginator } from 'components/periodPaginator/periodPaginator';\nimport { PeriodTypeSelect } from 'components/periodTypeSelect/periodTypeSelect';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nexport const CalendarToolbar = ({ mode }) => {\n  const location = useLocation();\n  const { day } = useParams();\n  const [type, setType] = useState('month');\n  const [date, setDate] = useState(moment().format('YYYY-MM-DD'));\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setDate(day);\n    if (location.pathname.includes('day')) {\n      setType(location.pathname.slice(15, 18));\n    }\n  }, [day, location.pathname]);\n\n  const selectDate = (date) => {\n    navigate(`/main/calendar/${type}/${date}`);\n  };\n\n  const nextArray = () => {\n    const nextDate = type === 'month' ? moment(date).add(1, 'month') : moment(date).add(1, 'day');\n    selectDate(nextDate.format('YYYY-MM-DD'));\n  };\n\n  const backArray = () => {\n    const previousDate = type === 'month' ? moment(date).subtract(1, 'month') : moment(date).subtract(1, 'day');\n    selectDate(previousDate.format('YYYY-MM-DD'));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'space-between', marginBottom: { xs: '24px', lg: '32px' } }}>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <PeriodPaginator\n          mode={mode}\n          type={type}\n          selectDate={selectDate}\n          date={date}\n          nextArray={nextArray}\n          backArray={backArray}\n        />\n      </LocalizationProvider>\n      <PeriodTypeSelect mode={mode} setType={setType} date={date} />\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { CalendarToolbar } from 'components/calendarToolbar/calendarToolbar';\nimport { Outlet } from 'react-router-dom';\n\n\nconst CalendarPage = ({ mode }) => {\n\n  return (\n    <Box>\n      <CalendarToolbar mode={mode} />\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["colorsLight","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor","PeriodPaginator","mode","type","selectDate","date","nextArray","backArray","calendarRef","useRef","useState","calendar","setCalendar","formattedDate","moment","locale","format","chooseFormattedDate","dateObj","dayjs","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Box","sx","display","ref","width","backgroundColor","textAlign","color","mt","mb","pt","pb","borderRadius","Typography","fontSize","fontWeight","lineHeight","textTransform","position","cursor","onClick","slice","slength","DateCalendar","value","zIndex","top","onChange","urlDate","$d","maxHeight","border","ml","Button","minWidth","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","padding","SvgIcon","style","stroke","href","Sprite","borderLeft","PeriodTypeSelect","setType","List","component","p","m","justifyContent","flexDirection","ListItem","ListItemButton","LinkComponent","NavLink","to","py","xs","px","borderRight","ListItemText","primary","fontFamily","md","CalendarToolbar","location","useLocation","day","useParams","setDate","navigate","useNavigate","pathname","includes","marginBottom","lg","LocalizationProvider","dateAdapter","AdapterDayjs","nextDate","add","previousDate","subtract"],"sourceRoot":""}