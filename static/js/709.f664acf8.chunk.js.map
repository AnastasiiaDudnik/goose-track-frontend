{"version":3,"file":"static/js/709.f664acf8.chunk.js","mappings":"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","sources":["components/addTaskBtn/addTaskBtn.jsx","components/taskToolbar/taskToolbar.jsx","components/taskColumnCard/taskColumnCard.jsx","components/tasksColumnList/tasksColumnList.jsx","components/taskModal/modal/modal.jsx","components/taskForm/taskForm.jsx","components/taskModal/taskModal.jsx","components/tasksColumnList copy/tasksColumn.jsx","redux/tasks/selectors.js","components/columnsTasksList/columnsTasksList.jsx","components/dayCalendarHead/dayCalendarHead.jsx","components/choosedDay/choosedDay.jsx","components/variables/colors.jsx"],"sourcesContent":["import { Button, IconButton, SvgIcon } from '@mui/material';\nimport React from 'react';\nimport Sprite from '../../icons/sprite.svg';\n\nexport default function AddTaskBtn({ btnList = false, openModal }) {\n  if (btnList === true) {\n    return (\n      <Button onClick={openModal} sx={style.btnAdd}>\n        {' '}\n        + add task{' '}\n      </Button>\n    );\n  }\n  return (\n    <IconButton onClick={openModal} aria-label=\"delete\" sx={style.btn}>\n      <SvgIcon sx={style.iconAdd} stroke=\"#111111\">\n        <use href={`${Sprite}#plus-circle`}></use>\n      </SvgIcon>\n    </IconButton>\n  );\n}\n\nconst style = {\n  btn: {\n    color: 'white',\n  },\n  iconAdd: {\n    width: { xs: '22px', md: '24px' },\n    height: { xs: '22px', md: '24px' },\n  },\n  btnAdd: {\n    width: '100%',\n    height: '48px',\n    backgroundColor: '#E3F3FF',\n    borderRadius: '8px',\n    border: 'dashed #3E85F3 2px',\n  },\n};\n","import { Box, IconButton, List, ListItem, SvgIcon } from '@mui/material'\nimport React, { useState } from 'react'\nimport Sprite from '../../icons/sprite.svg'\nimport { useDispatch } from 'react-redux'\nimport { deleteTask, updateTask } from 'redux/tasks/operations';\n\nfunction MiniModal({ todo }) {\n    const dispatch = useDispatch();\n\n    const right = {   }\n\n    if (todo.category === 'done') {\n        right.right = { xs: '-66px' }\n    } else {\n        \n        right.left = { md: '0px', }\n    }\n\n    return (\n        \n        <Box sx={ {...style.miniModal, ...right} } id={'modal'}>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'to-do' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'to-do' }))} >\n                To do\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'in-progress' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'in-progress' }))}>\n                In progress\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n            <Box sx={{ ...style.btnMiniModal, display: todo.category === 'done' ? 'none' : 'flex' }}\n                onClick={() => dispatch(updateTask({ ...todo, category: 'done' }))}>\n                Done\n                <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                    <use href={`${Sprite}#arrow-circle`}></use>\n                </SvgIcon>\n            </Box>\n        </Box>)\n}\n\nexport default function TaskToolbar({ todo }) {\n    const dispatch = useDispatch();\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <List sx={style.taskMenu} >\n\n            <ListItem sx={{ padding: '0', position: { xs: 'static', md: 'relative' } }}>\n                <IconButton aria-label=\"drag\" sx={style.btnMenu} onClick={() => setIsOpen(isOpen => !isOpen)}>\n                    <SvgIcon sx={{ ...style.iconButton, stroke: isOpen === true ? '#3E85F3' : '#111111' }}   >\n                        <use href={`${Sprite}#arrow-circle`}></use>\n                    </SvgIcon>\n                </IconButton>\n                {isOpen && <MiniModal todo={todo} />}\n\n            </ListItem>\n\n            <ListItem sx={{ padding: '0' }}>\n                <IconButton aria-label=\"edit\" sx={style.btnMenu}>\n                    <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                        <use href={`${Sprite}#pencil`}></use>\n                    </SvgIcon>\n                </IconButton>\n            </ListItem>\n\n            <ListItem sx={{ padding: '0' }}>\n                <IconButton aria-label=\"delete\" sx={style.btnMenu} onClick={() => dispatch(deleteTask(todo._id))}>\n                    <SvgIcon sx={style.iconButton} stroke=\"#111111\" >\n                        <use href={`${Sprite}#trash`}></use>\n                    </SvgIcon>\n                </IconButton>\n            </ListItem>\n\n        </List>\n    )\n}\n\nconst style = {\n\n\n    taskMenu: {\n        maxWidth: 360,\n        display: 'flex',\n        padding: '0',\n        gap: '10px'\n    },\n    btnMenu: {\n        padding: '0',\n        '&:hover, &:focus': {\n            '& svg': {\n                stroke: '#3E85F3'\n            },\n        }\n    },\n    iconButton: {\n        width: { xs: '14px', md: '16px' },\n        height: { xs: '14px', md: '16px' },\n        color: 'transparent'\n    },\n    miniModal: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '14px',\n        position: 'absolute',\n        right: { xs: '-15px' },\n        bottom: '-10px',\n        padding: '20px 24px',\n        boxSizing: 'border-box',\n        width: '148px',\n        height: '90px',\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        transform: 'translateY(100%)',\n        zIndex: '1000',\n        boxShadow: '0px 4px 16px 0px rgba(17, 17, 17, 0.10)'\n\n    },\n    btnMiniModal: {\n        height: '18px',\n        color: '#343434',\n        fontSize: '14px',\n        fontFamily: 'Inter',\n        fontStyle: 'normal',\n        fontWeight: '500',\n        lineHeight: '18px',\n\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        '&:hover, &:focus': {\n            color: ' #3E85F3',\n            '& svg': {\n                stroke: '#3E85F3'\n            },\n            cursor: 'pointer',\n        }\n    }\n}","import { Avatar, Box, Typography } from '@mui/material'\nimport TaskToolbar from 'components/taskToolbar/taskToolbar'\nimport React from 'react'\n\n\nexport default function TaskColumnCard({todo}) {\n\n    return (\n        <Box sx={style.taskBox}>\n            <Typography sx={style.text}>{todo.title}</Typography>\n            <Box sx={style.flexBox}>\n                <Box sx={style.avatarBox}>\n                    <Avatar sx={style.avatar} />\n                    \n                    <Box sx={{...style.priorityLabel, backgroundColor: \n                        todo.priority === 'low' ? \"#72C2F8\" : todo.priority === 'medium' ? '#F3B249' : '#EA3D65'\n                    }}>{todo.priority}</Box>\n                </Box>\n                <TaskToolbar todo={todo}/>\n            </Box>\n        </Box>\n    )\n}\n\nconst style = {\n    flexBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-end',\n    },\n    text: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        width: '100%',\n        whiteSpace: 'nowrap',\n        marginBottom: '28px'\n    },\n    taskBox: {\n        padding: '15px',\n        boxSizing: 'border-box',\n        bgcolor: '#F7F6F9',\n        minWidth: '100%',\n        maxWidth: '100%',\n        borderRadius: '8px',\n        position: 'relative',\n    },\n    avatarBox: {\n        display: 'flex',\n        gap: '10px',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n    },\n    avatar: {\n        border: '1.8px solid #3E85F3',\n        width: { xs: '32px', md: '44px' },\n        height: { xs: '32px', md: '44px' },\n    },\n    priorityLabel: {\n        // bgcolor: '#F3B249',\n        paddingInline: '15px',\n        height: '20px',\n        borderRadius: '4px',\n        lineHeight: '1.2',\n        fontSize: '10px',\n        color: '#F7F6F9',\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n}","import { List, ListItem } from '@mui/material'\nimport TaskColumnCard from 'components/taskColumnCard/taskColumnCard'\nimport React from 'react'\n\nexport default function TasksColumnList({ todos }) {\n\n    return (\n        <List sx={style.list}>\n            {todos.map(todo =>\n                <ListItem key={todo._id} sx={style.item}>\n                    <TaskColumnCard todo={todo} />\n                </ListItem>\n            )}\n        </List>\n    )\n}\n\nconst style = {\n    list: {\n        boxSizing: 'border-box',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '18px',\n        marginTop: '24px', \n        height: '400px',\n        padding: '0',\n        paddingInline: '21px',\n    },\n    item: {\n        \"&:last-child\": {\n            marginBottom: {\n                xs: '46px',\n                md: '0'\n            }\n        },\n        padding: '0'\n    },\n}\n\n\n\n\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Box, IconButton, Modal, SvgIcon } from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalWrapper = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.code === `Escape`) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [closeModal]);\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Modal open onClose={handleClose} disablePortal>\n      <Box\n        sx={{\n          position: 'absolute',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          borderRadius: '8px',\n          maxWidth: '95%',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        <IconButton\n          onClick={closeModal}\n          sx={{\n            position: 'absolute',\n            top: '14px',\n            right: '14px',\n            transition: 'all 250ms',\n            cursor: 'pointner',\n            width: { xs: '20px', md: '24px' },\n            height: { xs: '20px', md: '24px' },\n            padding: 0,\n          }}\n        >\n          <SvgIcon stroke=\"currentColor\">\n            <use href={`${Sprite}#close`}></use>\n          </SvgIcon>\n        </IconButton>\n        {children}\n      </Box>\n    </Modal>,\n    modalRoot\n  );\n};\n\nexport default ModalWrapper;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  Typography,\n  Box,\n  InputBase,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Button,\n  SvgIcon,\n} from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport { colorsLight } from 'components/variables/colors';\nimport { Notify } from 'notiflix';\nimport { addTask } from 'redux/tasks/operations';\nimport dayjs from 'dayjs';\n// import { selectError } from 'redux/tasks/selectors';\n\nconst TaskForm = ({ closeModal, date, category }) => {\n  const defaultTask = {\n    title: '',\n    start: '00:00',\n    end: '00:00',\n    priority: 'low',\n    category,\n    date: dayjs(new Date(date)).format('YYYY-MM-DD'),\n  };\n\n  const [task, setTask] = useState(defaultTask);\n  // const [savedTask, setSavedTask] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setTask(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (task.start > task.end) {\n      Notify.failure('Start time must be later than end time');\n      return;\n    } else {\n      dispatch(addTask({ ...task, date: '2023-07-07' }));\n      closeModal();\n    }\n  };\n\n  return (\n    <Formik initialValues={defaultTask}>\n      <Form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            padding: { xs: '48px 18px 40px', md: '40px 28px', lg: '40px 28px' },\n          }}\n        >\n          <label>\n            <Typography\n              sx={{\n                color: colorsLight.secondaryTextColor,\n                fontSize: '12px',\n                fontWeight: '500',\n                lineHeight: '1.16',\n                textAlign: 'start',\n                marginBottom: '8px',\n              }}\n            >\n              Title\n            </Typography>\n            <Field\n              placeholder=\"Enter text\"\n              name=\"title\"\n              type=\"text\"\n              onChange={handleChange}\n              value={task.title}\n              as={InputBase}\n              sx={{\n                width: '100%',\n                fontSize: '14px',\n                fontWeight: 600,\n                color: colorsLight.popUpInputTextColor,\n                border: '1px solid rgba(17, 17, 17, 0.15)',\n                borderRadius: '8px',\n                padding: '8px 18px 7px 18px',\n                marginBottom: { xs: '16px', md: '18px', lg: '18px' },\n                backgroundColor: colorsLight.inputFieldColor,\n              }}\n            />\n          </label>\n          <Box\n            sx={{\n              display: 'flex',\n              gap: '14px',\n              marginBottom: { xs: '16px', md: '28px', lg: '28px' },\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  Start\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"start\"\n                  value={task.start}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  End\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"end\"\n                  value={task.end}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n          </Box>\n\n          <RadioGroup\n            onChange={handleChange}\n            value={task.priority}\n            name=\"priority\"\n            sx={{\n              flexDirection: 'row',\n              flexWrap: 'nowrap',\n              justifyContent: 'start',\n              gap: '16px',\n              marginBottom: '32px',\n              height: { xs: '14px', md: '18px', lg: '18px' },\n            }}\n          >\n            <FormControlLabel\n              label=\"Low\"\n              value={'low'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskLowColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskLowColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"Medium\"\n              value={'medium'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskMedColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                      padding: '0px',\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskMedColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"High\"\n              value={'high'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskHighColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskHighColor,\n                    },\n                  }}\n                />\n              }\n            />\n          </RadioGroup>\n\n          <Box\n            sx={{\n              height: { xs: '42px', md: '48px', lg: '48px' },\n              display: 'flex',\n              gap: '14px',\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: '100%',\n                flexGrow: '1',\n                backgroundColor: colorsLight.accentBackgroundColor,\n                boxShadow: 'none',\n                gap: '8px',\n              }}\n            >\n              <SvgIcon\n                stroke=\"currentColor\"\n                sx={{\n                  width: { xs: '18px', md: '20px', lg: '20px' },\n                  height: { xs: '18px', md: '20px', lg: '20px' },\n                  fill: '#3E85F3;',\n                }}\n              >\n                <use href={`${Sprite}#add`}></use>\n              </SvgIcon>\n              Add\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={closeModal}\n              sx={{\n                height: '100%',\n                width: '144px',\n                backgroundColor: colorsLight.taskCancelColor,\n                color: colorsLight.mainTextColor,\n                boxShadow: 'none',\n              }}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n","import { Box } from '@mui/material';\nimport ModalWrapper from 'components/taskModal/modal/modal';\nimport TaskForm from 'components/taskForm/taskForm';\nimport { colorsLight } from 'components/variables/colors';\n// import { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\nconst TaskModal = ({ closeModal, currentTask, date, category }) => {\n  // const [data, setData] = useState(null);\n  // const { currentDay } = useParams();\n\n  // useEffect(() => {\n  //   const { _id, category } = currentTask;\n\n  //   if (_id) {\n  //     setData({ ...data, status: 'edit' });\n  //   } else if (category) {\n  //     setData({\n  //       title: '',\n  //       date: currentDay,\n  //       start: '00:00',\n  //       end: '00:00',\n  //       priority: 'Low',\n  //       category,\n  //       statusOperation: 'create',\n  //     });\n  //   } else {\n  //     closeModal();\n  //   }\n  // }, [closeModal, currentTask, currentDay]);\n\n  return (\n    <ModalWrapper closeModal={closeModal}>\n      <Box\n        sx={{\n          borderRadius: '8px',\n          border: '1px solid rgba(220, 227, 229, 0.8)',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          backgroundColor: colorsLight.mainBackgroundColor,\n          width: { xs: '100%', md: '396px', lg: '396px' },\n          height: { xs: '100%', md: '360px', lg: '360px' },\n          padding: 0,\n        }}\n      >\n        <TaskForm date={date ? date : new Date()} category={category ? category : 'to-do'} currentTask={currentTask} closeModal={closeModal} />\n      </Box>\n    </ModalWrapper>\n  );\n};\n\nexport default TaskModal;\n","import { Box, Typography } from '@mui/material';\nimport AddTaskBtn from 'components/addTaskBtn/addTaskBtn';\nimport { useState } from 'react';\nimport TasksColumnList from 'components/tasksColumnList/tasksColumnList';\nimport React from 'react';\nimport TaskModal from 'components/taskModal/taskModal';\n\nexport default function TasksColumn({ title, todos, date, category }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <Box sx={style.listTodos}>\n      <Box sx={style.addPanel}>\n        <Typography>{title}</Typography>\n        <AddTaskBtn openModal={openModal} />\n      </Box>\n\n      <TasksColumnList todos={todos} />\n\n      <Box sx={style.btnAdd}>\n        <AddTaskBtn btnList openModal={openModal} />\n      </Box>\n      {showModal && <TaskModal currentTask={todos} date={date} category={category} closeModal={closeModal} />}\n    </Box>\n  );\n}\n\nconst style = {\n  btnAdd: {\n    width: {\n      xs: 'calc(100% - 36px)',\n      md: '100%',\n    },\n    position: {\n      xs: 'absolute',\n      md: 'static',\n    },\n    bottom: '10px',\n    left: '18px',\n    boxSizing: 'border-box',\n    paddingInline: {\n      md: '21px',\n    },\n    marginTop: {\n      md: '32px',\n    },\n  },\n  addPanel: {\n    paddingInline: '21px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  listTodos: {\n    boxSizing: 'border-box',\n    mt: '15px',\n    maxWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    minWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '8px',\n    scrollSnapAlign: 'center',\n    alignItems: 'space-between',\n    position: 'relative',\n    padding: '18px 0 22px 0',\n  },\n};\n","export const selectTasks = state => state.tasks.tasks;\n\nexport const selectCurrentTask = state => state.tasks.currentTask;\n\nexport const selectIsRefreshing = state => state.tasks.isRefreshing;\n\nexport const selectError = state => state.tasks.error;\n","import { Box } from '@mui/material'\nimport TasksColumn from 'components/tasksColumnList copy/tasksColumn'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTasks } from 'redux/tasks/selectors'\n\nexport default function ColumnsTasksList({ value, weekend }) {\n  const { tasks } = useSelector(selectTasks);\n  const day = new Date(weekend[value].date).getDate();\n\n  if (!tasks) {\n    return\n  }\n\n  const dayTasks = tasks.filter(({ date }) => new Date(date).getDate() === day)\n\n  return (\n    <Box sx={style.taskPanel}>\n      <TasksColumn title={'To do'} category={'to-do'} date={day} todos={dayTasks.filter(({ category }) => category === \"to-do\")} />\n      <TasksColumn title={'In progress'} category={'in-progress'} date={day} todos={dayTasks.filter(({ category }) => category === \"in-progress\")} />\n      <TasksColumn title={'Done'} category={'done'} date={day} todos={dayTasks.filter(({ category }) => category === \"done\")} />\n    </Box>\n  )\n}\n\nconst style = {\n\n  taskPanel: {\n    scrollbarColor: 'black',\n    display: 'flex  ',\n    overflowX: {\n      xs: 'scroll',\n      mb: 'scroll',\n      lg: 'auto',\n    },\n    scrollSnapType: 'x mandatory',\n    width: {\n      xs: 'calc(100vw - 40px)',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    gap: {\n      xs: '20px',\n      md: '16px',\n      lg: '27px'\n    },\n    boxSizing: 'border-box',\n\n    paddingBottom: '46px',\n\n    maxHeight: {\n      md: '100%',\n      lg: '100%'\n    },\n  }\n}","import { Box, Tab, Tabs } from '@mui/material'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport weekday from 'dayjs/plugin/weekday'\ndayjs.extend(weekday)\n\nexport default function DayCalendarHead({ value, handleChange, weekend }) {\n\n    return (\n        <>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n                sx={style.weekIconList}>\n                {\n                    weekend.map(({ day, weekDay, weekDayMob }) =>\n                        <Tab key={weekDay}\n                            sx={style.iconDayTask}\n                            icon={\n                                <Box sx={style.dayTitle}>\n                                    <Box sx={style.desk}>{weekDay}</Box>\n                                    <Box sx={style.mobile}>{weekDayMob}</Box>\n                                    <Box className='numberDay' >{day}</Box>\n                                </Box>}\n                        />\n                    )\n                }\n            </Tabs>\n        </>\n    )\n}\n\nconst style = { \n    \n    iconDayTask: { \n        paddingInline: '0',\n        '&.Mui-selected': {\n            color: '#343434',\n            border: 'none'\n        },\n        '& .numberDay': {\n            width: '20px',\n            height: '20px',\n            marginTop: '6px',\n\n        },\n        '&.Mui-selected .numberDay': {\n            backgroundColor: '#3E85F3',\n            borderRadius: '6px',\n            color: '#FFFFFF',\n\n        },\n        '&': {\n            width: 'calc(100% / 7)'\n        },\n        '& span': {\n            display: 'none',\n            color: '#3E85F3'\n        },\n    },\n    dayTitle: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: 'Inter',\n    },\n    desk: {\n        display: {\n            xs: 'none',\n            md: 'block'\n        }\n    },\n    mobile: {\n        display: {\n            md: 'none'\n        }\n    },\n    weekIconList: {\n        '.MuiTabs-indicator': {\n            display: 'none'\n        },\n        '.MuiButtonBase-root': {\n            minWidth: {\n                xs: 'calc(100%/7)',\n                md: 'calc((100% - 64px) / 7)',\n            },\n            boxSizing: 'border-box',\n        },\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        boxSizing: 'border-box',\n        width: '100%'\n    }\n}","import { Box } from '@mui/material'\nimport ColumnsTasksList from 'components/columnsTasksList/columnsTasksList';\nimport DayCalendarHead from 'components/dayCalendarHead/dayCalendarHead';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getWeekTasks } from 'redux/tasks/operations';\n\nexport default function ChoosedDay() {\n    const params = useParams();\n    const [day] = useState(() => params.currentDay ? new Date(params.currentDay) : new Date())\n    const [value, setValue] = React.useState(null);\n    const dispatch = useDispatch();\n\n    const weekend = useMemo(() => {\n        const arr = [];\n        let i = 0; let y = 7;\n\n        if (dayjs(day).weekday() === 0) {\n            i = -7; y = 0;\n        }\n        let e = 0\n        for (i; i < y; i++) {\n            const test = dayjs(day).weekday(i + 1);\n\n            arr[e] = {\n                day: test.$D,\n                weekDay: String(test.$d).slice(0, 3),\n                weekDayMob: String(test.$d).slice(0, 1),\n                date: test.$d,\n            }\n            e++\n        }\n        return arr\n    }, [day])\n\n    function addZero(num) {\n        if (num < 10) {\n            return `0${num}`\n        }\n        return num\n    }\n    useEffect(() => {\n        if (value === null) {\n            setValue(dayjs(day).day() === 0 ? 6 : dayjs(day).day() - 1)\n        }\n    }, [day, value]);\n\n    useEffect(() => {\n        if (weekend[0] && day) {\n            dispatch(getWeekTasks({\n                years: new Date(weekend[0].date).getFullYear(),\n                month: addZero(new Date(weekend[0].date).getMonth() + 1),\n                day: addZero(new Date(weekend[0].date).getDate()),\n            }))\n        }\n    }, [day, dispatch, weekend])\n\n    const handleChange = (e, newValue) => {\n        setValue(newValue);\n    };\n    if (!day) {\n        return\n    }\n\n    if (value === null || !weekend) {\n        return\n    }\n    return (\n        <Box sx={style.boxDay}>\n            <Box sx={{ boxSizing: 'border-box' }}>\n                <Box sx={{ borderColor: 'divider', }}>\n                    <DayCalendarHead value={value} weekend={weekend} handleChange={handleChange} />\n                </Box>\n            </Box>\n            <ColumnsTasksList weekend={weekend} value={value} />\n        </Box>\n    )\n}\n\nconst style = {\n    boxDay: {\n        width: {\n            xs: '100%',\n            md: 'calc(100vw - 64px)',\n            lg: 'calc(100%)',\n        },\n        margin: '0'\n    }\n}\n\n","const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };"],"names":["AddTaskBtn","btnList","openModal","Button","onClick","sx","style","btnAdd","IconButton","btn","SvgIcon","iconAdd","stroke","href","Sprite","color","width","xs","md","height","backgroundColor","borderRadius","border","MiniModal","todo","dispatch","useDispatch","right","category","left","Box","miniModal","id","btnMiniModal","display","updateTask","iconButton","TaskToolbar","useState","isOpen","setIsOpen","List","taskMenu","ListItem","padding","position","btnMenu","deleteTask","_id","maxWidth","gap","flexDirection","bottom","boxSizing","bgcolor","transform","zIndex","boxShadow","fontSize","fontFamily","fontStyle","fontWeight","lineHeight","alignItems","justifyContent","cursor","TaskColumnCard","taskBox","Typography","text","title","flexBox","avatarBox","Avatar","avatar","priorityLabel","priority","textOverflow","overflow","whiteSpace","marginBottom","minWidth","paddingInline","TasksColumnList","todos","list","map","item","marginTop","modalRoot","document","querySelector","children","closeModal","useEffect","handleEscape","e","code","window","addEventListener","removeEventListener","createPortal","Modal","open","onClose","target","currentTarget","disablePortal","top","transition","date","defaultTask","start","end","dayjs","Date","format","task","setTask","handleChange","name","value","prev","handleSubmit","preventDefault","Notify","addTask","initialValues","onSubmit","lg","colorsLight","textAlign","placeholder","type","onChange","as","InputBase","flexGrow","RadioGroup","flexWrap","FormControlLabel","label","control","Radio","variant","fill","currentTask","TasksColumn","showModal","setShowModal","listTodos","addPanel","mt","scrollSnapAlign","selectTasks","state","tasks","ColumnsTasksList","weekend","useSelector","day","getDate","dayTasks","filter","taskPanel","scrollbarColor","overflowX","mb","scrollSnapType","paddingBottom","maxHeight","DayCalendarHead","Tabs","weekIconList","weekDay","weekDayMob","Tab","iconDayTask","icon","dayTitle","desk","mobile","className","weekday","ChoosedDay","params","useParams","currentDay","React","setValue","useMemo","arr","i","y","test","$D","String","$d","slice","addZero","num","getWeekTasks","years","getFullYear","month","getMonth","boxDay","borderColor","newValue","margin","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor"],"sourceRoot":""}