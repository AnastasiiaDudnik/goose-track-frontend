{"version":3,"file":"static/js/709.c39ad761.chunk.js","mappings":"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","sources":["components/addTaskBtn/addTaskBtn.jsx","components/taskModal/modal/modal.jsx","components/taskForm/taskForm.jsx","components/taskModal/taskModal.jsx","components/taskToolbar/taskToolbar.jsx","components/taskColumnCard/taskColumnCard.jsx","components/tasksColumnList/tasksColumnList.jsx","components/tasksColumnList copy/tasksColumn.jsx","redux/tasks/selectors.js","components/columnsTasksList/columnsTasksList.jsx","components/dayCalendarHead/dayCalendarHead.jsx","components/choosedDay/choosedDay.jsx","components/variables/colors.jsx"],"sourcesContent":["import { Button, IconButton, SvgIcon } from '@mui/material';\nimport React from 'react';\nimport Sprite from '../../icons/sprite.svg';\n\nexport default function AddTaskBtn({ btnList = false, openModal }) {\n  if (btnList === true) {\n    return (\n      <Button onClick={openModal} sx={style.btnAdd}>\n        {' '}\n        + add task{' '}\n      </Button>\n    );\n  }\n  return (\n    <IconButton onClick={openModal} aria-label=\"delete\" sx={style.btn}>\n      <SvgIcon sx={style.iconAdd} stroke=\"#111111\">\n        <use href={`${Sprite}#plus-circle`}></use>\n      </SvgIcon>\n    </IconButton>\n  );\n}\n\nconst style = {\n  btn: {\n    color: 'white',\n  },\n  iconAdd: {\n    width: { xs: '22px', md: '24px' },\n    height: { xs: '22px', md: '24px' },\n  },\n  btnAdd: {\n    width: '100%',\n    height: '48px',\n    backgroundColor: '#E3F3FF',\n    borderRadius: '8px',\n    border: 'dashed #3E85F3 2px',\n  },\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Box, IconButton, Modal, SvgIcon } from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalWrapper = ({ children, closeModal }) => {\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.code === `Escape`) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [closeModal]);\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Modal open onClose={handleClose} disablePortal>\n      <Box\n        sx={{\n          position: 'absolute',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          borderRadius: '8px',\n          maxWidth: '95%',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        <IconButton\n          onClick={closeModal}\n          sx={{\n            position: 'absolute',\n            top: '14px',\n            right: '14px',\n            transition: 'all 250ms',\n            cursor: 'pointner',\n            width: { xs: '20px', md: '24px' },\n            height: { xs: '20px', md: '24px' },\n            padding: 0,\n          }}\n        >\n          <SvgIcon stroke=\"currentColor\">\n            <use href={`${Sprite}#close`}></use>\n          </SvgIcon>\n        </IconButton>\n        {children}\n      </Box>\n    </Modal>,\n    modalRoot\n  );\n};\n\nexport default ModalWrapper;\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  Typography,\n  Box,\n  InputBase,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Button,\n  SvgIcon,\n} from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport { colorsLight } from 'components/variables/colors';\nimport { Notify } from 'notiflix';\nimport { addTask } from 'redux/tasks/operations';\nimport dayjs from 'dayjs';\n// import { selectError } from 'redux/tasks/selectors';\n\nconst TaskForm = ({ closeModal, date, currentTask }) => {\n  const defaultTask = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    category: 'in-progress',\n    date: dayjs(new Date(date)).format('YYYY-MM-DD'),\n  };\n\n  const [task, setTask] = useState(defaultTask);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentTask !== null) {\n      const { _id, ...data } = currentTask;\n      if (_id) {\n        setTask(data);\n      }\n    }\n  }, [currentTask]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setTask(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (task.start > task.end) {\n      Notify.failure('Start time must be later than end time');\n      return;\n    } else {\n      dispatch(\n        addTask({ ...task, date: dayjs(new Date(date)).format('YYYY-MM-DD') })\n      );\n      closeModal();\n    }\n  };\n\n  return (\n    <Formik initialValues={defaultTask}>\n      <Form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            padding: { xs: '48px 18px 40px', md: '40px 28px', lg: '40px 28px' },\n          }}\n        >\n          <label>\n            <Typography\n              sx={{\n                color: colorsLight.secondaryTextColor,\n                fontSize: '12px',\n                fontWeight: '500',\n                lineHeight: '1.16',\n                textAlign: 'start',\n                marginBottom: '8px',\n              }}\n            >\n              Title\n            </Typography>\n            <Field\n              placeholder=\"Enter text\"\n              name=\"title\"\n              type=\"text\"\n              onChange={handleChange}\n              value={task.title}\n              as={InputBase}\n              sx={{\n                width: '100%',\n                fontSize: '14px',\n                fontWeight: 600,\n                color: colorsLight.popUpInputTextColor,\n                border: '1px solid rgba(17, 17, 17, 0.15)',\n                borderRadius: '8px',\n                padding: '8px 18px 7px 18px',\n                marginBottom: { xs: '16px', md: '18px', lg: '18px' },\n                backgroundColor: colorsLight.inputFieldColor,\n              }}\n            />\n          </label>\n          <Box\n            sx={{\n              display: 'flex',\n              gap: '14px',\n              marginBottom: { xs: '16px', md: '28px', lg: '28px' },\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  Start\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"start\"\n                  value={task.start}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color: colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  End\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"end\"\n                  value={task.end}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color: colorsLight.popUpInputTextColor,\n                    border: '1px solid rgba(17, 17, 17, 0.15)',\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor: colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n          </Box>\n\n          <RadioGroup\n            onChange={handleChange}\n            value={task.priority}\n            name=\"priority\"\n            sx={{\n              flexDirection: 'row',\n              flexWrap: 'nowrap',\n              justifyContent: 'start',\n              gap: '16px',\n              marginBottom: '32px',\n              height: { xs: '14px', md: '18px', lg: '18px' },\n            }}\n          >\n            <FormControlLabel\n              label=\"Low\"\n              value={'low'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskLowColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskLowColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"Medium\"\n              value={'medium'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskMedColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                      padding: '0px',\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskMedColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"High\"\n              value={'high'}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskHighColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskHighColor,\n                    },\n                  }}\n                />\n              }\n            />\n          </RadioGroup>\n\n          <Box\n            sx={{\n              height: { xs: '42px', md: '48px', lg: '48px' },\n              display: 'flex',\n              gap: '14px',\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: '100%',\n                flexGrow: '1',\n                backgroundColor: colorsLight.accentBackgroundColor,\n                boxShadow: 'none',\n                gap: '8px',\n              }}\n            >\n              <SvgIcon\n                stroke=\"currentColor\"\n                sx={{\n                  width: { xs: '18px', md: '20px', lg: '20px' },\n                  height: { xs: '18px', md: '20px', lg: '20px' },\n                  fill: '#3E85F3;',\n                }}\n              >\n                <use href={`${Sprite}#add`}></use>\n              </SvgIcon>\n              Add\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={closeModal}\n              sx={{\n                height: '100%',\n                width: '144px',\n                backgroundColor: colorsLight.taskCancelColor,\n                color: colorsLight.mainTextColor,\n                boxShadow: 'none',\n              }}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n","import { Box } from '@mui/material';\nimport ModalWrapper from 'components/taskModal/modal/modal';\nimport TaskForm from 'components/taskForm/taskForm';\nimport { colorsLight } from 'components/variables/colors';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst TaskModal = ({ closeModal, currentTask, date, category }) => {\n  const [data, setData] = useState(null);\n  const { currentDay } = useParams();\n\n  useEffect(() => {\n    const { _id, category } = currentTask;\n\n    if (_id) {\n      setData({ ...currentTask, status: 'edit' });\n    } else if (category) {\n      setData({\n        title: '',\n        date: currentDay,\n        start: '00:00',\n        end: '00:00',\n        priority: 'low',\n        category,\n        statusOperation: 'create',\n      });\n    } else {\n      closeModal();\n    }\n  }, [closeModal, currentTask, currentDay]);\n\n  return (\n    <ModalWrapper closeModal={closeModal}>\n      <Box\n        sx={{\n          borderRadius: '8px',\n          border: '1px solid rgba(220, 227, 229, 0.8)',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          backgroundColor: colorsLight.mainBackgroundColor,\n          width: { xs: '100%', md: '396px', lg: '396px' },\n          height: { xs: '100%', md: '360px', lg: '360px' },\n          padding: 0,\n        }}\n      >\n        <TaskForm\n          date={date}\n          category={category ? category : 'to-do'}\n          currentTask={data}\n          closeModal={closeModal}\n        />\n      </Box>\n    </ModalWrapper>\n  );\n};\n\nexport default TaskModal;\n","import { Box, IconButton, List, ListItem, SvgIcon } from '@mui/material';\nimport React, { useState } from 'react';\nimport Sprite from '../../icons/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, updateTask } from 'redux/tasks/operations';\nimport TaskModal from 'components/taskModal/taskModal';\n\nfunction MiniModal({ todo }) {\n\n  const dispatch = useDispatch();\n\n  const right = {};\n\n  if (todo.category === 'done') {\n    right.right = { xs: '-66px' };\n  } else {\n    right.left = { md: '0px' };\n  }\n\n  return (\n    <Box sx={{ ...style.miniModal, ...right }} id={'modal'}>\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'to-do' ? 'none' : 'flex',\n        }}\n        onClick={() => dispatch(updateTask({ ...todo, category: 'to-do' }))}\n      >\n        To do\n        <SvgIcon sx={style.iconButton} stroke=\"#111111\">\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'in-progress' ? 'none' : 'flex',\n        }}\n        onClick={() =>\n          dispatch(updateTask({ ...todo, category: 'in-progress' }))\n        }\n      >\n        In progress\n        <SvgIcon sx={style.iconButton} stroke=\"#111111\">\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'done' ? 'none' : 'flex',\n        }}\n        onClick={() => dispatch(updateTask({ ...todo, category: 'done' }))}\n      >\n        Done\n        <SvgIcon sx={style.iconButton} stroke=\"#111111\">\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n    </Box>\n  );\n\n}\n\nexport default function TaskToolbar({ todo }) {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <List sx={style.taskMenu}>\n      <ListItem\n        sx={{ padding: '0', position: { xs: 'static', md: 'relative' } }}\n      >\n        <IconButton\n          aria-label=\"drag\"\n          sx={style.btnMenu}\n          onClick={() => setIsOpen(isOpen => !isOpen)}\n        >\n          <SvgIcon\n            sx={{\n              ...style.iconButton,\n              stroke: isOpen === true ? '#3E85F3' : '#111111',\n            }}\n          >\n            <use href={`${Sprite}#arrow-circle`}></use>\n          </SvgIcon>\n        </IconButton>\n        {isOpen && <MiniModal todo={todo} />}\n      </ListItem>\n\n      <ListItem sx={{ padding: '0' }}>\n        <IconButton\n          aria-label=\"edit\"\n          sx={style.btnMenu}\n          onClick={() => setShowModal(showModal => !showModal)}\n        >\n          <SvgIcon sx={style.iconButton} stroke=\"#111111\">\n            <use href={`${Sprite}#pencil`}></use>\n          </SvgIcon>\n          {showModal && <TaskModal currentTask={todo} />}\n        </IconButton>\n\n        {}\n      </ListItem>\n\n      <ListItem sx={{ padding: '0' }}>\n        <IconButton\n          aria-label=\"delete\"\n          sx={style.btnMenu}\n          onClick={() => dispatch(deleteTask(todo._id))}\n        >\n          <SvgIcon sx={style.iconButton} stroke=\"#111111\">\n            <use href={`${Sprite}#trash`}></use>\n          </SvgIcon>\n        </IconButton>\n      </ListItem>\n    </List>\n  );\n}\n\nconst style = {\n  taskMenu: {\n    maxWidth: 360,\n    display: 'flex',\n    padding: '0',\n    gap: '10px',\n  },\n  btnMenu: {\n    padding: '0',\n    '&:hover, &:focus': {\n      '& svg': {\n        stroke: '#3E85F3',\n      },\n    },\n  },\n  iconButton: {\n    width: { xs: '14px', md: '16px' },\n    height: { xs: '14px', md: '16px' },\n    color: 'transparent',\n  },\n  miniModal: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '14px',\n    position: 'absolute',\n    right: { xs: '-15px' },\n    bottom: '-10px',\n    padding: '20px 24px',\n    boxSizing: 'border-box',\n    width: '148px',\n    height: '90px',\n    bgcolor: '#FFFFFF',\n    borderRadius: '8px',\n    transform: 'translateY(100%)',\n    zIndex: '1000',\n    boxShadow: '0px 4px 16px 0px rgba(17, 17, 17, 0.10)',\n  },\n  btnMiniModal: {\n    height: '18px',\n    color: '#343434',\n    fontSize: '14px',\n    fontFamily: 'Inter',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    lineHeight: '18px',\n\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    '&:hover, &:focus': {\n      color: ' #3E85F3',\n      '& svg': {\n        stroke: '#3E85F3',\n      },\n      cursor: 'pointer',\n    },\n\n  },\n};\n\n","import { Avatar, Box, Typography } from '@mui/material'\nimport TaskToolbar from 'components/taskToolbar/taskToolbar'\nimport React from 'react'\n\n\nexport default function TaskColumnCard({todo}) {\n\n    return (\n        <Box sx={style.taskBox}>\n            <Typography sx={style.text}>{todo.title}</Typography>\n            <Box sx={style.flexBox}>\n                <Box sx={style.avatarBox}>\n                    <Avatar sx={style.avatar} />\n                    \n                    <Box sx={{...style.priorityLabel, backgroundColor: \n                        todo.priority === 'low' ? \"#72C2F8\" : todo.priority === 'medium' ? '#F3B249' : '#EA3D65'\n                    }}>{todo.priority}</Box>\n                </Box>\n                <TaskToolbar todo={todo}/>\n            </Box>\n        </Box>\n    )\n}\n\nconst style = {\n    flexBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'flex-end',\n    },\n    text: {\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        width: '100%',\n        whiteSpace: 'nowrap',\n        marginBottom: '28px'\n    },\n    taskBox: {\n        padding: '15px',\n        boxSizing: 'border-box',\n        bgcolor: '#F7F6F9',\n        minWidth: '100%',\n        maxWidth: '100%',\n        borderRadius: '8px',\n        position: 'relative',\n    },\n    avatarBox: {\n        display: 'flex',\n        gap: '10px',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end'\n    },\n    avatar: {\n        border: '1.8px solid #3E85F3',\n        width: { xs: '32px', md: '44px' },\n        height: { xs: '32px', md: '44px' },\n    },\n    priorityLabel: {\n        // bgcolor: '#F3B249',\n        paddingInline: '15px',\n        height: '20px',\n        borderRadius: '4px',\n        lineHeight: '1.2',\n        fontSize: '10px',\n        color: '#F7F6F9',\n        display: 'flex',\n        alignItems: 'center',\n    },\n\n}","import { List, ListItem } from '@mui/material';\nimport TaskColumnCard from 'components/taskColumnCard/taskColumnCard';\nimport React from 'react';\n\nexport default function TasksColumnList({ todos }) {\n  return (\n    <List sx={style.list}>\n      {todos.map(todo => (\n        <ListItem key={todo._id} sx={style.item}>\n          <TaskColumnCard todo={todo} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nconst style = {\n\n  list: {\n    boxSizing: 'border-box',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '18px',\n    marginTop: '24px',\n    height: '400px',\n    padding: '0',\n    paddingInline: '21px',\n  },\n  item: {\n    '&:last-child': {\n      marginBottom: {\n        xs: '46px',\n        md: '0',\n      },\n\n    },\n    padding: '0',\n  },\n};\n","import { Box, Typography } from '@mui/material';\nimport AddTaskBtn from 'components/addTaskBtn/addTaskBtn';\nimport { useState } from 'react';\nimport TasksColumnList from 'components/tasksColumnList/tasksColumnList';\nimport React from 'react';\nimport TaskModal from 'components/taskModal/taskModal';\n\nexport default function TasksColumn({ title, todos, date, category }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <Box sx={style.listTodos}>\n      <Box sx={style.addPanel}>\n        <Typography>{title}</Typography>\n        <AddTaskBtn openModal={openModal} />\n      </Box>\n\n      <TasksColumnList todos={todos} />\n\n      <Box sx={style.btnAdd}>\n        <AddTaskBtn btnList openModal={openModal} />\n      </Box>\n      {showModal && (\n        <TaskModal\n          currentTask={todos}\n          date={date}\n          category={category}\n          closeModal={closeModal}\n        />\n      )}\n    </Box>\n  );\n}\n\nconst style = {\n  btnAdd: {\n    width: {\n      xs: 'calc(100% - 36px)',\n      md: '100%',\n    },\n    position: {\n      xs: 'absolute',\n      md: 'static',\n    },\n    bottom: '10px',\n    left: '18px',\n    boxSizing: 'border-box',\n    paddingInline: {\n      md: '21px',\n    },\n    marginTop: {\n      md: '32px',\n    },\n  },\n  addPanel: {\n    paddingInline: '21px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  listTodos: {\n    boxSizing: 'border-box',\n    mt: '15px',\n    maxWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    minWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '8px',\n    scrollSnapAlign: 'center',\n    alignItems: 'space-between',\n    position: 'relative',\n    padding: '18px 0 22px 0',\n  },\n};\n","export const selectTasks = state => state.tasks.tasks;\n\nexport const selectCurrentTask = state => state.tasks.currentTask;\n\nexport const selectIsRefreshing = state => state.tasks.isRefreshing;\n\nexport const selectError = state => state.tasks.error;\n","import { Box } from '@mui/material'\nimport TasksColumn from 'components/tasksColumnList copy/tasksColumn'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTasks } from 'redux/tasks/selectors'\n\nexport default function ColumnsTasksList({ value, weekend }) {\n  const { tasks } = useSelector(selectTasks);\n  const day = new Date(weekend[value].date).getDate();\n  const dateTask = new Date(weekend[value].date)\n  if (!tasks) {\n    return\n  }\n\n  const dayTasks = tasks.filter(({ date }) => new Date(date).getDate() === day)\n\n  return (\n    <Box sx={style.taskPanel}>\n      <TasksColumn title={'To do'} category={'to-do'} date={dateTask} todos={dayTasks.filter(({ category }) => category === \"to-do\")} />\n      <TasksColumn title={'In progress'} category={'in-progress'} date={dateTask} todos={dayTasks.filter(({ category }) => category === \"in-progress\")} />\n      <TasksColumn title={'Done'} category={'done'} date={dateTask} todos={dayTasks.filter(({ category }) => category === \"done\")} />\n    </Box>\n  )\n}\n\nconst style = {\n\n  taskPanel: {\n    scrollbarColor: 'black',\n    display: 'flex  ',\n    overflowX: {\n      xs: 'scroll',\n      mb: 'scroll',\n      lg: 'auto',\n    },\n    scrollSnapType: 'x mandatory',\n    width: {\n      xs: 'calc(100vw - 40px)',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    gap: {\n      xs: '20px',\n      md: '16px',\n      lg: '27px'\n    },\n    boxSizing: 'border-box',\n\n    paddingBottom: '46px',\n\n    maxHeight: {\n      md: '100%',\n      lg: '100%'\n    },\n  }\n}","import { Box, Tab, Tabs } from '@mui/material'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport weekday from 'dayjs/plugin/weekday'\ndayjs.extend(weekday)\n\nexport default function DayCalendarHead({ value, handleChange, weekend }) {\n\n    return (\n        <>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n                sx={style.weekIconList}>\n                {\n                    weekend.map(({ day, weekDay, weekDayMob }) =>\n                        <Tab key={weekDay}\n                            sx={style.iconDayTask}\n                            icon={\n                                <Box sx={style.dayTitle}>\n                                    <Box sx={style.desk}>{weekDay}</Box>\n                                    <Box sx={style.mobile}>{weekDayMob}</Box>\n                                    <Box className='numberDay' >{day}</Box>\n                                </Box>}\n                        />\n                    )\n                }\n            </Tabs>\n        </>\n    )\n}\n\nconst style = { \n    \n    iconDayTask: { \n        paddingInline: '0',\n        '&.Mui-selected': {\n            color: '#343434',\n            border: 'none'\n        },\n        '& .numberDay': {\n            width: '20px',\n            height: '20px',\n            marginTop: '6px',\n\n        },\n        '&.Mui-selected .numberDay': {\n            backgroundColor: '#3E85F3',\n            borderRadius: '6px',\n            color: '#FFFFFF',\n\n        },\n        '&': {\n            width: 'calc(100% / 7)'\n        },\n        '& span': {\n            display: 'none',\n            color: '#3E85F3'\n        },\n    },\n    dayTitle: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: 'Inter',\n    },\n    desk: {\n        display: {\n            xs: 'none',\n            md: 'block'\n        }\n    },\n    mobile: {\n        display: {\n            md: 'none'\n        }\n    },\n    weekIconList: {\n        '.MuiTabs-indicator': {\n            display: 'none'\n        },\n        '.MuiButtonBase-root': {\n            minWidth: {\n                xs: 'calc(100%/7)',\n                md: 'calc((100% - 64px) / 7)',\n            },\n            boxSizing: 'border-box',\n        },\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        boxSizing: 'border-box',\n        width: '100%'\n    }\n}","import { Box } from '@mui/material';\nimport ColumnsTasksList from 'components/columnsTasksList/columnsTasksList';\nimport DayCalendarHead from 'components/dayCalendarHead/dayCalendarHead';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getWeekTasks } from 'redux/tasks/operations';\n\nexport default function ChoosedDay() {\n  const location = useLocation();\n  const [day] = useState(() => location.pathname.slice(19, 29));\n  const [value, setValue] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const weekend = useMemo(() => {\n    const arr = [];\n    let i = 0;\n    let y = 7;\n\n    if (dayjs(day).weekday() === 0) {\n      i = -7;\n      y = 0;\n    }\n    let e = 0;\n    for (i; i < y; i++) {\n      const test = dayjs(day).weekday(i + 1);\n\n      arr[e] = {\n        day: test.$D,\n        weekDay: String(test.$d).slice(0, 3),\n        weekDayMob: String(test.$d).slice(0, 1),\n        date: test.$d,\n      };\n      e++;\n    }\n    return arr;\n  }, [day]);\n\n  function addZero(num) {\n    if (num < 10) {\n      return `0${num}`;\n    }\n    return num;\n  }\n  useEffect(() => {\n    if (value === null) {\n      setValue(dayjs(day).day() === 0 ? 6 : dayjs(day).day() - 1);\n    }\n  }, [day, value]);\n\n  useEffect(() => {\n    if (weekend[0] && day) {\n      dispatch(\n        getWeekTasks({\n          years: new Date(weekend[0].date).getFullYear(),\n          month: addZero(new Date(weekend[0].date).getMonth() + 1),\n          day: addZero(new Date(weekend[0].date).getDate()),\n        })\n      );\n    }\n  }, [day, dispatch, weekend]);\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n  };\n  if (!day) {\n    return;\n  }\n\n  if (value === null || !weekend) {\n    return;\n  }\n  return (\n    <Box sx={style.boxDay}>\n      <Box sx={{ boxSizing: 'border-box' }}>\n        <Box sx={{ borderColor: 'divider' }}>\n          <DayCalendarHead\n            value={value}\n            weekend={weekend}\n            handleChange={handleChange}\n          />\n        </Box>\n      </Box>\n      <ColumnsTasksList weekend={weekend} value={value} />\n    </Box>\n  );\n}\n\nconst style = {\n  '&::-webkit--scrollbar': {\n    borderRadius: '5px',\n    width: '.65em',\n    backgroundColor: '#ffffff',\n  },\n  '&::-webkit-scrollbar-track, &::-webkit-scrollbar-corner': {\n    backgroundColor: 'rgba(170, 170, 170, 0)',\n  },\n\n  '&::-webkit-scrollbar-thumb, &::-webkit-resizer': {\n    background: 'rgba(170, 170, 170, 0.6)',\n    borderRadius: '5px',\n    boxShadow: 'inset 0.05em 0.05em 0 rgba(0, 0, 0, 0.1), inset 0 - 0.05em 0 rgba(0, 0, 0, 0.07)',\n  },\n  boxDay: {\n    width: {\n      xs: '100%',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    margin: '0',\n  },\n};\n","const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };"],"names":["AddTaskBtn","btnList","openModal","Button","onClick","sx","style","btnAdd","IconButton","btn","SvgIcon","iconAdd","stroke","href","Sprite","color","width","xs","md","height","backgroundColor","borderRadius","border","modalRoot","document","querySelector","children","closeModal","useEffect","handleEscape","e","code","window","addEventListener","removeEventListener","createPortal","Modal","open","onClose","target","currentTarget","disablePortal","Box","position","boxShadow","maxWidth","top","left","transform","right","transition","cursor","padding","date","currentTask","defaultTask","title","start","end","priority","category","dayjs","Date","format","useState","task","setTask","dispatch","useDispatch","_id","data","handleChange","name","value","prev","handleSubmit","preventDefault","Notify","addTask","initialValues","onSubmit","lg","Typography","colorsLight","fontSize","fontWeight","lineHeight","textAlign","marginBottom","placeholder","type","onChange","as","InputBase","display","gap","flexGrow","RadioGroup","flexDirection","flexWrap","justifyContent","FormControlLabel","label","control","Radio","variant","fill","setData","currentDay","useParams","status","statusOperation","MiniModal","todo","miniModal","id","btnMiniModal","updateTask","iconButton","TaskToolbar","isOpen","setIsOpen","showModal","setShowModal","List","taskMenu","ListItem","btnMenu","deleteTask","bottom","boxSizing","bgcolor","zIndex","fontFamily","fontStyle","alignItems","TaskColumnCard","taskBox","text","flexBox","avatarBox","Avatar","avatar","priorityLabel","textOverflow","overflow","whiteSpace","minWidth","paddingInline","TasksColumnList","todos","list","map","item","marginTop","TasksColumn","listTodos","addPanel","mt","scrollSnapAlign","selectTasks","state","tasks","ColumnsTasksList","weekend","useSelector","day","getDate","dateTask","dayTasks","filter","taskPanel","scrollbarColor","overflowX","mb","scrollSnapType","paddingBottom","maxHeight","DayCalendarHead","Tabs","weekIconList","weekDay","weekDayMob","Tab","iconDayTask","icon","dayTitle","desk","mobile","className","weekday","ChoosedDay","location","useLocation","pathname","slice","React","setValue","useMemo","arr","i","y","test","$D","String","$d","addZero","num","getWeekTasks","years","getFullYear","month","getMonth","boxDay","borderColor","newValue","background","margin","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor"],"sourceRoot":""}